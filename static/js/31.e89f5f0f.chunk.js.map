{"version":3,"sources":["components/Level.js"],"names":["LevelItem","React","memo","statistic","total","delta","t","useTranslation","spring","useSpring","config","SPRING_CONFIG_NUMBERS","statisticConfig","STATISTIC_CONFIGS","Fragment","capitalize","displayName","h4","interpolate","formatNumber","format","size","verticalAlign","h1","data","trail","useMemo","styles","PRIMARY_STATISTICS","map","index","push","animationDelay","className","div","key","classnames","style","getStatistic","prevProps","currProps","equal"],"mappings":"+GAAA,qGAkDA,IAAMA,EAAYC,IAAMC,MApCxB,YAAmD,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACjCC,EAAKC,cAALD,EACDE,EAASC,YAAU,CACvBL,MAAOA,EACPC,MAAOA,EACPK,OAAQC,MAGJC,EAAkBC,IAAkBV,GAE1C,OACE,kBAAC,IAAMW,SAAP,KACE,4BAAKR,EAAES,YAAWH,EAAgBI,eAClC,kBAAC,IAASC,GAAV,KACiB,WAAdd,EACCE,EAAQ,EACNG,EAAOH,MAAMa,aACX,SAACb,GAAD,iBACMc,YAAad,EAAOO,EAAgBQ,OAAQjB,OAGpD,kBAAC,IAAD,CAAekB,KAAM,EAAGC,cAAe,IAGzC,QAGJ,kBAAC,IAASC,GAAV,KACGf,EAAOJ,MAAMc,aAAY,SAACd,GAAD,OACxBe,YAAaf,EAAOQ,EAAgBQ,OAAQjB,WAqDvCF,cAAMC,MA5CrB,YAAwB,IAARsB,EAAO,EAAPA,KACRC,EAAQC,mBAAQ,WACpB,IAAMC,EAAS,GAQf,OANAC,IAAmBC,KAAI,SAAC1B,EAAW2B,GAIjC,OAHAH,EAAOI,KAAK,CACVC,eAAe,GAAD,OAAK,IAAc,IAARF,EAAX,QAET,QAEFH,IACN,IAEH,OACE,yBAAKM,UAAU,SACZL,IAAmBC,KAAI,SAAC1B,EAAW2B,GAAZ,OACtB,kBAAC,IAASI,IAAV,CACEC,IAAKL,EACLG,UAAWG,IAAW,aAAD,aAAqBjC,GAAa,YACvDkC,MAAOZ,EAAMK,IAEb,kBAAC9B,EAAD,cACM,CAACG,aADP,CAEEC,MAAOkC,YAAad,EAAM,QAASrB,GACnCE,MAAOiC,YAAad,EAAM,QAASrB,cAQ/B,SAACoC,EAAWC,GAC1B,QACGC,IACCH,YAAaC,EAAUf,KAAM,QAAS,UACtCc,YAAaE,EAAUhB,KAAM,QAAS","file":"static/js/31.e89f5f0f.chunk.js","sourcesContent":["import {\r\n  PRIMARY_STATISTICS,\r\n  STATISTIC_CONFIGS,\r\n  SPRING_CONFIG_NUMBERS,\r\n} from '../constants';\r\nimport {capitalize, formatNumber, getStatistic} from '../utils/commonFunctions';\r\n\r\nimport {HeartFillIcon} from '@primer/octicons-v2-react';\r\nimport classnames from 'classnames';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useMemo} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {animated, useSpring} from 'react-spring';\r\n\r\nfunction PureLevelItem({statistic, total, delta}) {\r\n  const {t} = useTranslation();\r\n  const spring = useSpring({\r\n    total: total,\r\n    delta: delta,\r\n    config: SPRING_CONFIG_NUMBERS,\r\n  });\r\n\r\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5>{t(capitalize(statisticConfig.displayName))}</h5>\r\n      <animated.h4>\r\n        {statistic !== 'active' ? (\r\n          delta > 0 ? (\r\n            spring.delta.interpolate(\r\n              (delta) =>\r\n                `+${formatNumber(delta, statisticConfig.format, statistic)}`\r\n            )\r\n          ) : (\r\n            <HeartFillIcon size={9} verticalAlign={2} />\r\n          )\r\n        ) : (\r\n          '\\u00A0'\r\n        )}\r\n      </animated.h4>\r\n      <animated.h1>\r\n        {spring.total.interpolate((total) =>\r\n          formatNumber(total, statisticConfig.format, statistic)\r\n        )}\r\n      </animated.h1>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst LevelItem = React.memo(PureLevelItem);\r\n\r\nfunction Level({data}) {\r\n  const trail = useMemo(() => {\r\n    const styles = [];\r\n\r\n    PRIMARY_STATISTICS.map((statistic, index) => {\r\n      styles.push({\r\n        animationDelay: `${750 + index * 250}ms`,\r\n      });\r\n      return null;\r\n    });\r\n    return styles;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Level\">\r\n      {PRIMARY_STATISTICS.map((statistic, index) => (\r\n        <animated.div\r\n          key={index}\r\n          className={classnames('level-item', `is-${statistic}`, 'fadeInUp')}\r\n          style={trail[index]}\r\n        >\r\n          <LevelItem\r\n            {...{statistic}}\r\n            total={getStatistic(data, 'total', statistic)}\r\n            delta={getStatistic(data, 'delta', statistic)}\r\n          />\r\n        </animated.div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (\r\n    !equal(\r\n      getStatistic(prevProps.data, 'total', 'active'),\r\n      getStatistic(currProps.data, 'total', 'active')\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default React.memo(Level, isEqual);\r\n"],"sourceRoot":""}
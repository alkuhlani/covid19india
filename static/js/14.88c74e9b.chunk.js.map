{"version":3,"sources":["components/Tooltip.js","../node_modules/react-use/esm/useLongPress.js","components/HeaderCell.js","workers/getDistricts.js","../../src/rpc-wrapper.js","components/loaders/Table.js","components/snippets/TableDeltaHelper.js","components/Table.js","../node_modules/date-fns/esm/max/index.js","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx"],"names":["Tooltip","data","children","useState","isTooltipVisible","setIsTooltipVisible","transitions","useTransition","from","TOOLTIP_FADE_OUT","enter","TOOLTIP_FADE_IN","leave","config","mass","tension","friction","handleClick","useCallback","e","stopPropagation","className","style","position","onMouseEnter","bind","onMouseLeave","onClick","map","item","key","props","div","dangerouslySetInnerHTML","__html","replace","preventDefault","event","isTouchEvent","touches","length","useLongPress","callback","_a","_b","_c","isPreventDefault","_d","delay","timeout","useRef","target","start","addEventListener","passive","current","setTimeout","clear","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","React","memo","handleSort","sortData","setSortData","statistic","t","useTranslation","longPressEvent","sortColumn","produce","sortDataDraft","delta","this","classnames","invert","isAscending","size","toTitleCase","STATISTIC_CONFIGS","displayName","prevProps","currProps","equal","addMethods","methods","module","exports","w","Worker","name","worker","c","callbacks","d","f","Object","Error","evt","document","method","Promise","id","a","type","params","TableLoader","windowWidth","window","innerWidth","width","viewBox","height","speed","animate","x","y","rx","ry","TableDeltaHelper","statisticIndex","setStatisticIndex","useEffect","prevStatisticIndex","TABLE_STATISTICS","Fragment","Row","lazy","states","timelineDate","date","regionHighlighted","setRegionHighlighted","expandTable","setExpandTable","useSessionStorage","handleSortClick","draftSortData","trail","useTrail","transform","opacity","to","wobbly","districts","setDistricts","tableOption","setTableOption","isPerMillion","setIsPerMillion","isInfoVisible","setIsInfoVisible","lastUpdatedTT","useMemo","dirtyDatesArray","datesArray","result","requiredArgs","arguments","forEach","Date","NaN","Array","prototype","slice","call","dirtyDate","currentDate","toDate","undefined","isNaN","max","meta","tested","filter","parseIndiaDate","sortingFunction","regionKeyA","regionKeyB","statisticConfig","dataType","hideDelta","statisticA","getTableStatistic","statisticB","regionNameA","districtName","STATE_NAMES","regionNameB","localeCompare","_setTableOption","prevTableOption","workerInstance","getDistricts","message","terminate","transition","TABLE_FADE_OUT","TABLE_FADE_IN","tableStatistics","TABLE_STATISTICS_EXPANDED","entries","abbr","exp","verticalAlign","top","gridTemplateColumns","HeaderCell","keys","stateCode","UNASSIGNED_STATE_CODE","sort","b","Table","DISTRICT_TABLE_COUNT","districtKey","total","confirmed","SVG","backgroundColor","backgroundOpacity","baseUrl","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","keyTimes","dur","React.createElement","role","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","cx","cy","r"],"mappings":"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","file":"static/js/14.88c74e9b.chunk.js","sourcesContent":["import {TOOLTIP_FADE_IN, TOOLTIP_FADE_OUT} from '../animations';\r\n\r\nimport React, {useCallback, useState} from 'react';\r\nimport {useTransition, animated} from 'react-spring';\r\n\r\nconst Tooltip = ({data, children}) => {\r\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\r\n\r\n  const transitions = useTransition(isTooltipVisible, null, {\r\n    from: TOOLTIP_FADE_OUT,\r\n    enter: TOOLTIP_FADE_IN,\r\n    leave: TOOLTIP_FADE_OUT,\r\n    config: {\r\n      mass: 1,\r\n      tension: 210,\r\n      friction: 20,\r\n    },\r\n  });\r\n\r\n  const handleClick = useCallback((e) => e.stopPropagation(), []);\r\n\r\n  return (\r\n    <span\r\n      className=\"Tooltip\"\r\n      style={{position: 'relative'}}\r\n      onMouseEnter={setIsTooltipVisible.bind(this, true)}\r\n      onMouseLeave={setIsTooltipVisible.bind(this, false)}\r\n      onClick={handleClick.bind(this)}\r\n    >\r\n      {children}\r\n\r\n      {transitions.map(({item, key, props}) =>\r\n        item ? (\r\n          <animated.div key={key} style={props}>\r\n            <div className=\"message\">\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: data.replace(/\\n/g, '<br/>'),\r\n                }}\r\n              ></p>\r\n            </div>\r\n          </animated.div>\r\n        ) : (\r\n          <animated.div key={key}></animated.div>\r\n        )\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","/* eslint-disable */\nimport { useCallback, useRef } from 'react';\nvar isTouchEvent = function (event) {\n    return 'touches' in event;\n};\nvar preventDefault = function (event) {\n    if (!isTouchEvent(event))\n        return;\n    if (event.touches.length < 2 && event.preventDefault) {\n        event.preventDefault();\n    }\n};\nvar useLongPress = function (callback, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.isPreventDefault, isPreventDefault = _c === void 0 ? true : _c, _d = _b.delay, delay = _d === void 0 ? 300 : _d;\n    var timeout = useRef();\n    var target = useRef();\n    var start = useCallback(function (event) {\n        // prevent ghost click on mobile devices\n        if (isPreventDefault && event.target) {\n            event.target.addEventListener('touchend', preventDefault, { passive: false });\n            target.current = event.target;\n        }\n        timeout.current = setTimeout(function () { return callback(event); }, delay);\n    }, [callback, delay]);\n    var clear = useCallback(function () {\n        // clearTimeout and removeEventListener\n        timeout.current && clearTimeout(timeout.current);\n        if (isPreventDefault && target.current) {\n            target.current.removeEventListener('touchend', preventDefault);\n        }\n    }, []);\n    return {\n        onMouseDown: function (e) { return start(e); },\n        onTouchStart: function (e) { return start(e); },\n        onMouseUp: clear,\n        onMouseLeave: clear,\n        onTouchEnd: clear,\n    };\n};\nexport default useLongPress;\n","import Tooltip from './Tooltip';\r\n\r\nimport {STATISTIC_CONFIGS} from '../constants';\r\nimport {toTitleCase} from '../utils/commonFunctions';\r\n\r\nimport {FilterIcon, InfoIcon} from '@primer/octicons-v2-react';\r\nimport classnames from 'classnames';\r\nimport equal from 'fast-deep-equal';\r\nimport produce from 'immer';\r\nimport React from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLongPress} from 'react-use';\r\n\r\nfunction StateHeaderCell({handleSort, sortData, setSortData, statistic}) {\r\n  const {t} = useTranslation();\r\n\r\n  const onLongPress = () => {\r\n    if (sortData.sortColumn === statistic) {\r\n      setSortData(\r\n        produce(sortData, (sortDataDraft) => {\r\n          sortDataDraft.delta = !sortData.delta;\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const longPressEvent = useLongPress(onLongPress, {isPreventDefault: false});\r\n\r\n  return (\r\n    <div\r\n      className=\"cell heading\"\r\n      onClick={handleSort.bind(this, statistic)}\r\n      {...longPressEvent}\r\n    >\r\n      {sortData.sortColumn === statistic && (\r\n        <div\r\n          className={classnames('sort-icon', {\r\n            invert: sortData.isAscending,\r\n            [`is-${statistic}`]: sortData.delta,\r\n          })}\r\n        >\r\n          <FilterIcon size={10} />\r\n        </div>\r\n      )}\r\n      <div>{t(toTitleCase(STATISTIC_CONFIGS[statistic].displayName))}</div>\r\n      {statistic === 'other' && (\r\n        <Tooltip data={'Migrated cases or non-COVID deaths'}>\r\n          <InfoIcon size={14} />\r\n        </Tooltip>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\r\n  if (!equal(prevProps.sortData, currProps.sortData)) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport default React.memo(StateHeaderCell, isStateHeaderCellEqual);\r\n","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getDistricts\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"923af9e784f157bb7da7.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export default function addMethods(worker, methods) {\n\tlet c = 0;\n\tlet callbacks = {};\n\tworker.addEventListener('message', (e) => {\n\t\tlet d = e.data;\n\t\tif (d.type!=='RPC') return;\n\t\tif (d.id) {\n\t\t\tlet f = callbacks[d.id];\n\t\t\tif (f) {\n\t\t\t\tdelete callbacks[d.id];\n\t\t\t\tif (d.error) {\n\t\t\t\t\tf[1](Object.assign(Error(d.error.message), d.error));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf[0](d.result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet evt = document.createEvent('Event');\n\t\t\tevt.initEvent(d.method, false, false);\n\t\t\tevt.data = d.params;\n\t\t\tworker.dispatchEvent(evt);\n\t\t}\n\t});\n\tmethods.forEach( method => {\n\t\tworker[method] = (...params) => new Promise( (a, b) => {\n\t\t\tlet id = ++c;\n\t\t\tcallbacks[id] = [a, b];\n\t\t\tworker.postMessage({ type: 'RPC', id, method, params });\n\t\t});\n\t});\n}\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst TableLoader = () => {\r\n  const windowWidth = window.innerWidth;\r\n  const width = windowWidth > 769 ? 448 : windowWidth;\r\n  const height = 135;\r\n\r\n  return (\r\n    <div className=\"TableLoader\">\r\n      <ContentLoader\r\n        viewBox={`0 0 ${width} ${height}`}\r\n        height={height}\r\n        width={width}\r\n        speed={2}\r\n        animate={false}\r\n      >\r\n        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width={width} height=\"40\" />\r\n        <rect x=\"0\" y=\"45\" rx=\"3\" ry=\"3\" width={width} height=\"40\" />\r\n        <rect x=\"0\" y=\"90\" rx=\"3\" ry=\"3\" width={width} height=\"40\" />\r\n      </ContentLoader>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableLoader;\r\n","import {TABLE_STATISTICS} from '../../constants';\r\n\r\nimport {FilterIcon} from '@primer/octicons-v2-react';\r\nimport classnames from 'classnames';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst TableDeltaHelper = () => {\r\n  const [statisticIndex, setStatisticIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const id = window.setTimeout(() => {\r\n      setStatisticIndex((prevStatisticIndex) =>\r\n        prevStatisticIndex === TABLE_STATISTICS.length - 1\r\n          ? 0\r\n          : prevStatisticIndex + 1\r\n      );\r\n      window.clearTimeout(id);\r\n    }, 1000);\r\n  }, [statisticIndex]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span className={classnames(`is-${TABLE_STATISTICS[statisticIndex]}`)}>\r\n        <FilterIcon size={14} />\r\n      </span>\r\n      <p>Sort by Delta [long press]</p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TableDeltaHelper;\r\n","import HeaderCell from './HeaderCell';\r\nimport TableLoader from './loaders/Table';\r\nimport TableDeltaHelper from './snippets/TableDeltaHelper';\r\n\r\nimport {TABLE_FADE_IN, TABLE_FADE_OUT} from '../animations';\r\nimport {\r\n  DISTRICT_TABLE_COUNT,\r\n  STATE_NAMES,\r\n  STATISTIC_CONFIGS,\r\n  TABLE_STATISTICS,\r\n  TABLE_STATISTICS_EXPANDED,\r\n  UNASSIGNED_STATE_CODE,\r\n} from '../constants';\r\nimport {getTableStatistic, parseIndiaDate} from '../utils/commonFunctions';\r\n\r\nimport {\r\n  FilterIcon,\r\n  FoldDownIcon,\r\n  InfoIcon,\r\n  OrganizationIcon,\r\n  QuestionIcon,\r\n} from '@primer/octicons-v2-react';\r\nimport classnames from 'classnames';\r\nimport {max} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport produce from 'immer';\r\nimport React, {useCallback, useEffect, useMemo, useState, lazy} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport {useTrail, useTransition, animated, config} from 'react-spring';\r\nimport {useSessionStorage} from 'react-use';\r\n// eslint-disable-next-line\r\nimport worker from 'workerize-loader!../workers/getDistricts';\r\n\r\nconst Row = lazy(() => import('./Row'));\r\n\r\nfunction Table({\r\n  data: states,\r\n  date: timelineDate,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  expandTable,\r\n  setExpandTable,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const [sortData, setSortData] = useSessionStorage('sortData', {\r\n    sortColumn: 'confirmed',\r\n    isAscending: false,\r\n    delta: false,\r\n  });\r\n\r\n  const handleSortClick = useCallback(\r\n    (statistic) => {\r\n      if (sortData.sortColumn !== statistic) {\r\n        setSortData(\r\n          produce(sortData, (draftSortData) => {\r\n            draftSortData.sortColumn = statistic;\r\n          })\r\n        );\r\n      } else {\r\n        setSortData(\r\n          produce(sortData, (draftSortData) => {\r\n            draftSortData.isAscending = !sortData.isAscending;\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [sortData, setSortData]\r\n  );\r\n\r\n  const trail = useTrail(3, {\r\n    from: {transform: 'translate3d(0, 10px, 0)', opacity: 0},\r\n    to: {transform: 'translate3d(0, 0px, 0)', opacity: 1},\r\n    config: config.wobbly,\r\n  });\r\n\r\n  const [districts, setDistricts] = useState();\r\n\r\n  const [tableOption, setTableOption] = useState('States');\r\n  const [isPerMillion, setIsPerMillion] = useState(false);\r\n  const [isInfoVisible, setIsInfoVisible] = useState(false);\r\n\r\n  const lastUpdatedTT = useMemo(() => {\r\n    const updatedDates = [\r\n      states['TT']?.meta?.['last_updated'] || timelineDate,\r\n      states['TT']?.meta?.tested?.['last_updated'],\r\n    ];\r\n    return max(\r\n      updatedDates.filter((date) => date).map((date) => parseIndiaDate(date))\r\n    );\r\n  }, [states, timelineDate]);\r\n\r\n  const sortingFunction = useCallback(\r\n    (regionKeyA, regionKeyB) => {\r\n      if (sortData.sortColumn !== 'regionName') {\r\n        const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\r\n        const dataType =\r\n          sortData.delta && !statisticConfig.hideDelta ? 'delta' : 'total';\r\n\r\n        const statisticA = getTableStatistic(\r\n          districts?.[regionKeyA] || states[regionKeyA],\r\n          sortData.sortColumn,\r\n          isPerMillion,\r\n          lastUpdatedTT\r\n        )[dataType];\r\n        const statisticB = getTableStatistic(\r\n          districts?.[regionKeyB] || states[regionKeyB],\r\n          sortData.sortColumn,\r\n          isPerMillion,\r\n          lastUpdatedTT\r\n        )[dataType];\r\n        return sortData.isAscending\r\n          ? statisticA - statisticB\r\n          : statisticB - statisticA;\r\n      } else {\r\n        const regionNameA =\r\n          districts?.[regionKeyA]?.districtName || STATE_NAMES[regionKeyA];\r\n        const regionNameB =\r\n          districts?.[regionKeyB]?.districtName || STATE_NAMES[regionKeyB];\r\n        return sortData.isAscending\r\n          ? regionNameA.localeCompare(regionNameB)\r\n          : regionNameB.localeCompare(regionNameA);\r\n      }\r\n    },\r\n    [\r\n      districts,\r\n      isPerMillion,\r\n      lastUpdatedTT,\r\n      sortData.delta,\r\n      sortData.isAscending,\r\n      sortData.sortColumn,\r\n      states,\r\n    ]\r\n  );\r\n\r\n  const _setTableOption = useCallback(() => {\r\n    setTableOption((prevTableOption) =>\r\n      prevTableOption === 'States' ? 'Districts' : 'States'\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const workerInstance = worker();\r\n    workerInstance.getDistricts(states);\r\n    workerInstance.addEventListener('message', (message) => {\r\n      if (message.data.type !== 'RPC') {\r\n        setDistricts(message.data);\r\n        workerInstance.terminate();\r\n      }\r\n    });\r\n  }, [tableOption, states]);\r\n\r\n  const transition = useTransition(isInfoVisible, null, {\r\n    from: TABLE_FADE_OUT,\r\n    enter: TABLE_FADE_IN,\r\n    leave: TABLE_FADE_OUT,\r\n  });\r\n\r\n  const tableStatistics = expandTable\r\n    ? TABLE_STATISTICS_EXPANDED\r\n    : TABLE_STATISTICS;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"table-top\">\r\n        <animated.div\r\n          className={classnames('option-toggle', {\r\n            'is-highlighted': tableOption === 'Districts',\r\n          })}\r\n          onClick={_setTableOption}\r\n          style={trail[0]}\r\n        >\r\n          <OrganizationIcon size={14} />\r\n        </animated.div>\r\n\r\n        <animated.div\r\n          className={classnames('million-toggle', {\r\n            'is-highlighted': isPerMillion,\r\n          })}\r\n          onClick={setIsPerMillion.bind(this, !isPerMillion)}\r\n          style={trail[0]}\r\n        >\r\n          <span>10L</span>\r\n        </animated.div>\r\n\r\n        <animated.div\r\n          className={classnames('info-toggle', {\r\n            'is-highlighted': isInfoVisible,\r\n          })}\r\n          onClick={setIsInfoVisible.bind(this, !isInfoVisible)}\r\n          style={trail[0]}\r\n        >\r\n          <QuestionIcon size={14} />\r\n        </animated.div>\r\n\r\n        <animated.div\r\n          className={classnames('expand-table-toggle', {\r\n            'is-highlighted': expandTable,\r\n          })}\r\n          style={trail[1]}\r\n          onClick={setExpandTable.bind(this, !expandTable)}\r\n        >\r\n          <FoldDownIcon size={16} />\r\n        </animated.div>\r\n      </div>\r\n\r\n      {transition.map(({item, key, props}) =>\r\n        item ? (\r\n          <animated.div key={key} className=\"table-helper\" style={props}>\r\n            <div className=\"helper-top\">\r\n              <div className=\"helper-left\">\r\n                <div className=\"info-item\">\r\n                  <span>\r\n                    <OrganizationIcon size={14} />\r\n                  </span>\r\n                  <p>{`Toggle between States/Districts`}</p>\r\n                </div>\r\n\r\n                <div className=\"info-item\">\r\n                  <h5>10L</h5>\r\n                  <p>Per Ten Lakh People</p>\r\n                </div>\r\n\r\n                <div className=\"info-item sort\">\r\n                  <span>\r\n                    <FilterIcon size={14} />\r\n                  </span>\r\n                  <p>Sort by Descending</p>\r\n                </div>\r\n\r\n                <div className=\"info-item sort invert\">\r\n                  <span>\r\n                    <FilterIcon size={14} />\r\n                  </span>\r\n                  <p>Sort by Ascending</p>\r\n                </div>\r\n\r\n                <div className=\"info-item sort\">\r\n                  <TableDeltaHelper />\r\n                </div>\r\n\r\n                <div className=\"info-item notes\">\r\n                  <span>\r\n                    <InfoIcon size={15} />\r\n                  </span>\r\n                  <p>Notes</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"helper-right\">\r\n                <div className=\"info-item\">\r\n                  <p>Units</p>\r\n                </div>\r\n                {Object.entries({'1K': 3, '1L': 5, '1Cr': 7}).map(\r\n                  ([abbr, exp]) => (\r\n                    <div className=\"info-item\" key={abbr}>\r\n                      <h5>{abbr}</h5>\r\n                      <p>\r\n                        10\r\n                        <sup\r\n                          style={{\r\n                            verticalAlign: 'baseline',\r\n                            position: 'relative',\r\n                            top: '-.4em',\r\n                          }}\r\n                        >\r\n                          {exp}\r\n                        </sup>\r\n                      </p>\r\n                    </div>\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <h5 className=\"text\">\r\n              {t('Compiled from State Govt. numbers')},{' '}\r\n              <Link to=\"/about\">{t('know more')}!</Link>\r\n            </h5>\r\n          </animated.div>\r\n        ) : null\r\n      )}\r\n\r\n      <div className=\"table-container\">\r\n        <div\r\n          className=\"table fadeInUp\"\r\n          style={{\r\n            gridTemplateColumns: `repeat(${tableStatistics.length + 1}, auto)`,\r\n          }}\r\n        >\r\n          <div className=\"row heading\">\r\n            <div\r\n              className=\"cell heading\"\r\n              onClick={handleSortClick.bind(this, 'regionName')}\r\n            >\r\n              <div>{t(tableOption === 'States' ? 'State/UT' : 'District')}</div>\r\n              {sortData.sortColumn === 'regionName' && (\r\n                <div\r\n                  className={classnames('sort-icon', {\r\n                    invert: sortData.isAscending,\r\n                  })}\r\n                >\r\n                  <FilterIcon size={10} />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {tableStatistics.map((statistic) => (\r\n              <HeaderCell\r\n                key={statistic}\r\n                {...{statistic, sortData, setSortData}}\r\n                handleSort={handleSortClick.bind(this, statistic)}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          {tableOption === 'States' &&\r\n            Object.keys(states)\r\n              .filter(\r\n                (stateCode) =>\r\n                  stateCode !== 'TT' &&\r\n                  !(stateCode === UNASSIGNED_STATE_CODE && isPerMillion)\r\n              )\r\n              .sort((a, b) => sortingFunction(a, b))\r\n              .map((stateCode) => {\r\n                return (\r\n                  <Row\r\n                    key={stateCode}\r\n                    data={states[stateCode]}\r\n                    {...{\r\n                      stateCode,\r\n                      isPerMillion,\r\n                      regionHighlighted,\r\n                      setRegionHighlighted,\r\n                      expandTable,\r\n                      lastUpdatedTT,\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n\r\n          {tableOption === 'Districts' && !districts && <TableLoader />}\r\n\r\n          {tableOption === 'Districts' &&\r\n            districts &&\r\n            Object.keys(districts)\r\n              .sort((a, b) => sortingFunction(a, b))\r\n              .slice(0, DISTRICT_TABLE_COUNT)\r\n              .map((districtKey) => {\r\n                return (\r\n                  <Row\r\n                    key={districtKey}\r\n                    data={districts[districtKey]}\r\n                    districtName={districts[districtKey].districtName}\r\n                    {...{\r\n                      isPerMillion,\r\n                      regionHighlighted,\r\n                      setRegionHighlighted,\r\n                      expandTable,\r\n                      lastUpdatedTT,\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n\r\n          <Row\r\n            key={'TT'}\r\n            data={states['TT']}\r\n            stateCode={'TT'}\r\n            {...{\r\n              isPerMillion,\r\n              regionHighlighted,\r\n              setRegionHighlighted,\r\n              expandTable,\r\n              lastUpdatedTT,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (\r\n    !equal(\r\n      prevProps.regionHighlighted?.districtName,\r\n      currProps.regionHighlighted?.districtName\r\n    )\r\n  ) {\r\n    return false;\r\n  } else if (\r\n    !equal(\r\n      prevProps.regionHighlighted?.stateCode,\r\n      currProps.regionHighlighted?.stateCode\r\n    )\r\n  ) {\r\n    return false;\r\n  } else if (!equal(prevProps.date, currProps.date)) {\r\n    return false;\r\n  } else if (\r\n    !equal(\r\n      prevProps.data['TT'].total.confirmed,\r\n      currProps.data['TT'].total.confirmed\r\n    )\r\n  ) {\r\n    return false;\r\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\r\n    return false;\r\n  } else return true;\r\n};\r\n\r\nexport default React.memo(Table, isEqual);\r\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"sourceRoot":""}
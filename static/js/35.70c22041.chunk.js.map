{"version":3,"sources":["components/Timeline.js"],"names":["React","memo","setIsTimelineMode","setDate","dates","useMeasure","timelineElement","width","useState","index","setIndex","useSprings","length","i","x","color","opacity","config","stiff","springs","set","bind","useDrag","down","xDelta","delta","xDir","direction","distance","cancel","clampedIndex","getClampedIndex","setClampedDate","hideTimeline","setSprings","clamp","display","handleKeyPress","useKeyPressEvent","setTimeout","getDate","getIndiaDateISO","formatDate","timeline","transition","useTransition","hasOwnProperty","from","transform","enter","leave","handleClick","Fragment","map","item","key","props","h5","className","style","ref","filter","div","interpolate","onClick"],"mappings":"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","file":"static/js/35.70c22041.chunk.js","sourcesContent":["import {formatDate, getIndiaDateISO} from '../utils/commonFunctions';\r\n\r\nimport clamp from 'lodash/clamp';\r\nimport React, {useState} from 'react';\r\nimport {useSprings, useTransition, animated, config} from 'react-spring';\r\nimport {useMeasure, useKeyPressEvent} from 'react-use';\r\nimport {useDrag} from 'react-use-gesture';\r\n\r\nconst Timeline = ({setIsTimelineMode, setDate, dates}) => {\r\n  const [timelineElement, {width}] = useMeasure();\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const [springs, set] = useSprings(\r\n    dates.length,\r\n    (i) => ({\r\n      x: (index - i) * (480 / 3) + 480 / 2 - 35,\r\n      color: i === 0 ? '#6c757d' : '#6c757d99',\r\n      opacity: i < 2 ? 1 : 0,\r\n    }),\r\n    config.stiff\r\n  );\r\n\r\n  const bind = useDrag(\r\n    ({down, delta: [xDelta], direction: [xDir], distance, cancel}) => {\r\n      const clampedIndex = getClampedIndex(xDir);\r\n      if (down && distance > 25) {\r\n        cancel(setIndex(clampedIndex));\r\n        setClampedDate(clampedIndex);\r\n      }\r\n\r\n      if (index === 0 && xDir < 0) {\r\n        hideTimeline();\r\n      }\r\n\r\n      setSprings({clampedIndex: index, xDir, down, xDelta});\r\n    }\r\n  );\r\n\r\n  const getClampedIndex = (direction) => {\r\n    return clamp(index + (direction > 0 ? 1 : -1), 0, dates.length - 1);\r\n  };\r\n\r\n  const setSprings = ({direction, clampedIndex, down, xDelta}) => {\r\n    set((i) => {\r\n      if (i < clampedIndex - 1) {\r\n        return {x: width, color: '#6c757d99', opacity: 0, display: 'none'};\r\n      } else if (i > clampedIndex + 1) {\r\n        return {x: -40, color: '#6c757d99', opacity: 0, display: 'none'};\r\n      }\r\n\r\n      let x = 0;\r\n      if (xDelta) {\r\n        x =\r\n          (clampedIndex - i) * (width / 3) +\r\n          width / 2 -\r\n          35 +\r\n          (down ? xDelta : 0);\r\n      } else {\r\n        x = (clampedIndex - i) * (width / 3) + width / 3 + 45;\r\n      }\r\n\r\n      if (i === clampedIndex) {\r\n        return {x, color: '#6c757d', display: 'block'};\r\n      }\r\n      return {x, color: '#6c757d99', opacity: 1, display: 'block'};\r\n    });\r\n  };\r\n\r\n  const handleKeyPress = (direction) => {\r\n    if (index < dates.length) {\r\n      const clampedIndex = getClampedIndex(direction);\r\n      setSprings({direction, clampedIndex});\r\n      setIndex(clampedIndex);\r\n      setClampedDate(clampedIndex);\r\n    }\r\n    if (index === 1 && direction === -1) {\r\n      hideTimeline();\r\n    }\r\n  };\r\n\r\n  useKeyPressEvent('ArrowLeft', () => {\r\n    handleKeyPress(1);\r\n  });\r\n\r\n  useKeyPressEvent('ArrowRight', () => {\r\n    handleKeyPress(-1);\r\n  });\r\n\r\n  useKeyPressEvent('Escape', () => {\r\n    setIsTimelineMode(false);\r\n    setDate('');\r\n  });\r\n\r\n  const hideTimeline = () => {\r\n    setTimeout(() => {\r\n      setIsTimelineMode(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const getDate = (index) => {\r\n    if (dates[index] === getIndiaDateISO()) return 'Today';\r\n    return formatDate(dates[index], 'dd MMM');\r\n  };\r\n\r\n  const setClampedDate = (clampedIndex) => {\r\n    if (clampedIndex === 0) {\r\n      setDate('');\r\n    } else {\r\n      setDate(dates[clampedIndex]);\r\n    }\r\n  };\r\n\r\n  const timeline = {\r\n    '2020-03-25': 'Beginning of Lockdown Phase 1',\r\n    '2020-04-14': 'End of Lockdown Phase 1',\r\n    '2020-04-15': 'Beginning of Lockdown Phase 2',\r\n    '2020-05-03': 'End of Lockdown Phase 2',\r\n    '2020-05-04': 'Beginning of Lockdown Phase 3',\r\n    '2020-05-17': 'End of Lockdown Phase 3',\r\n    '2020-05-18': 'Beginning of Lockdown Phase 4',\r\n    '2020-05-31': 'End of Lockdown Phase 4',\r\n    '2020-06-01': 'Beginning of Lockdown Phase 5',\r\n  };\r\n\r\n  const transition = useTransition(\r\n    timeline.hasOwnProperty(dates[index]),\r\n    null,\r\n    {\r\n      from: {transform: 'translate3d(0, 20px, 0)', opacity: 0},\r\n      enter: {transform: 'translate3d(0, 0px, 0)', opacity: 1},\r\n      leave: {transform: 'translate3d(0, 20px, 0)', opacity: 0},\r\n    }\r\n  );\r\n\r\n  const handleClick = (clampedIndex) => {\r\n    if (clampedIndex > index) {\r\n      handleKeyPress(+1);\r\n    } else {\r\n      handleKeyPress(-1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {transition.map(\r\n        ({item, key, props}) =>\r\n          item && (\r\n            <animated.h5 className=\"highlight\" key={key} style={props}>\r\n              {timeline[dates[index]]}\r\n            </animated.h5>\r\n          )\r\n      )}\r\n\r\n      <div className=\"Timeline\" ref={timelineElement} {...bind()}>\r\n        {springs\r\n          .filter(\r\n            ({opacity}, i) =>\r\n              i < dates.length &&\r\n              (i === index + 1 ||\r\n                i === index - 1 ||\r\n                i === index + 2 ||\r\n                i === index - 2 ||\r\n                i === index)\r\n          )\r\n          .map(({x, color, opacity, display}, i) => (\r\n            <animated.div\r\n              className=\"day\"\r\n              key={i}\r\n              style={{\r\n                transform: x.interpolate((x) => `translate3d(${x}px,0,0)`),\r\n                opacity,\r\n                display,\r\n              }}\r\n            >\r\n              {index < 2 && (\r\n                <animated.h5\r\n                  style={{color}}\r\n                  onClick={() => {\r\n                    handleClick(i);\r\n                  }}\r\n                >\r\n                  {getDate(i)}\r\n                </animated.h5>\r\n              )}\r\n              {index > 1 && index < dates.length && (\r\n                <animated.h5\r\n                  style={{color}}\r\n                  onClick={() => {\r\n                    handleClick(index + i - 2);\r\n                  }}\r\n                >\r\n                  {getDate(index + i - 2)}\r\n                </animated.h5>\r\n              )}\r\n            </animated.div>\r\n          ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(Timeline);\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/MapSwitcher.js","../node_modules/react-use/esm/useIsomorphicLayoutEffect.js","../node_modules/react-use/esm/useMeasure.js"],"names":["React","memo","mapStatistic","setMapStatistic","useMeasure","mapSwitcher","width","useState","clicked","setClicked","count","setCount","useSpring","opacity","background","STATISTIC_CONFIGS","color","transform","PRIMARY_STATISTICS","indexOf","config","gentle","spring","set","useEffect","ReactDOM","unstable_batchedUpdates","delay","onStart","bind","onRest","handleClick","useCallback","statistic","prevCount","className","ref","div","style","map","index","key","classnames","onClick","prevProps","currProps","useIsomorphicLayoutEffect","window","useLayoutEffect","defaultState","x","y","height","top","left","bottom","right","isClient","ResizeObserver","_a","element","_b","rect","setRect","observer","useMemo","entries","contentRect","top_1","observe","disconnect"],"mappings":"oNAoEeA,cAAMC,MA5DD,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,gBAAqB,EACxBC,cADwB,mBAChDC,EADgD,KAClCC,EADkC,KAClCA,MADkC,EAEzBC,oBAAS,GAFgB,mBAEhDC,EAFgD,KAEvCC,EAFuC,OAG7BF,mBAAS,GAHoB,mBAGhDG,EAHgD,KAGzCC,EAHyC,OAIjCC,aAAU,iBAAO,CACrCC,QAAS,EACTC,WAAW,GAAD,OAAKC,IAAkBb,GAAcc,MAArC,MACVC,UAAU,cAAD,OACPX,EAAQY,IAAmBC,QAAQjB,GAAgB,IAD5C,OAGTkB,OAAQA,IAAOC,WAVsC,mBAIhDC,EAJgD,KAIxCC,EAJwC,KAavDC,qBAAU,WACJlB,EAAQ,GACVmB,IAASC,yBAAwB,WAC/BH,EAAI,CACFN,UAAU,cAAD,OACPX,EAAQY,IAAmBC,QAAQjB,GAAgB,IAD5C,OAGTW,QAAS,EACTC,WAAW,GAAD,OAAKC,IAAkBb,GAAcc,MAArC,MACVW,MAAiB,IAAVjB,EAAc,KAAO,EAC5BkB,QAASnB,EAAWoB,U,GAAW,GAC/BC,OAAQrB,EAAWoB,U,GAAW,UAInC,CAACnB,EAAOR,EAAcqB,EAAKjB,IAE9B,IAAMyB,EAAcC,uBAClB,SAACC,GACCtB,GAAS,SAACuB,GAAD,OAAeA,EAAY,KACpC/B,EAAgB8B,KAElB,CAAC9B,IAGH,OACE,yBAAKgC,UAAU,cAAcC,IAAK/B,GAChC,kBAAC,IAASgC,IAAV,CAAcF,UAAU,YAAYG,MAAOhB,IAE1CJ,IAAmBqB,KAAI,SAACN,EAAWO,GAAZ,OACtB,yBACEC,IAAKD,EACLL,UAAWO,IAAW,YAAD,4BAAsBT,IAAezB,IAC1DmC,QAASZ,EAAYF,U,EAAWI,YAO1B,SAACW,EAAWC,GAC1B,OAAID,EAAU1C,eAAiB2C,EAAU3C,iB,4CC5D5B4C,EADmC,qBAAXC,OAAyBC,kBAAkBxB,Y,QCE9EyB,EAAe,CACfC,EAAG,EACHC,EAAG,EACH7C,MAAO,EACP8C,OAAQ,EACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,GAwBKC,SAAcV,OAAOW,eAtBpB,WACb,IAAIC,EAAKpD,mBAAS,MAAOqD,EAAUD,EAAG,GAAIvB,EAAMuB,EAAG,GAC/CE,EAAKtD,mBAAS0C,GAAea,EAAOD,EAAG,GAAIE,EAAUF,EAAG,GACxDG,EAAWC,mBAAQ,WACnB,OAAO,IAAIlB,OAAOW,gBAAe,SAAUQ,GACvC,GAAIA,EAAQ,GAAI,CACZ,IAAIP,EAAKO,EAAQ,GAAGC,YAAajB,EAAIS,EAAGT,EAAGC,EAAIQ,EAAGR,EAAG7C,EAAQqD,EAAGrD,MAAO8C,EAASO,EAAGP,OAAQgB,EAAQT,EAAGN,IAAKC,EAAOK,EAAGL,KAAMC,EAASI,EAAGJ,OAAQC,EAAQG,EAAGH,MAC1JO,EAAQ,CAAEb,EAAGA,EAAGC,EAAGA,EAAG7C,MAAOA,EAAO8C,OAAQA,EAAQC,IAAKe,EAAOd,KAAMA,EAAMC,OAAQA,EAAQC,MAAOA,UAG5G,IASH,OARAV,GAA0B,WACtB,GAAKc,EAGL,OADAI,EAASK,QAAQT,GACV,WACHI,EAASM,gBAEd,CAACV,IACG,CAACxB,EAAK0B,IAEI,WAAc,MAAO,CAAC,aAAiBb","file":"static/js/23.06afb16a.chunk.js","sourcesContent":["import {PRIMARY_STATISTICS, STATISTIC_CONFIGS} from '../constants';\r\n\r\nimport classnames from 'classnames';\r\nimport React, {useState, useCallback, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {useSpring, animated, config} from 'react-spring';\r\nimport {useMeasure} from 'react-use';\r\n\r\nconst MapSwitcher = ({mapStatistic, setMapStatistic}) => {\r\n  const [mapSwitcher, {width}] = useMeasure();\r\n  const [clicked, setClicked] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n  const [spring, set] = useSpring(() => ({\r\n    opacity: 0,\r\n    background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\r\n    transform: `translateX(${\r\n      width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25\r\n    }px)`,\r\n    config: config.gentle,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (width > 0) {\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n        set({\r\n          transform: `translateX(${\r\n            width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25\r\n          }px)`,\r\n          opacity: 1,\r\n          background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\r\n          delay: count === 0 ? 1500 : 0,\r\n          onStart: setClicked.bind(this, true),\r\n          onRest: setClicked.bind(this, false),\r\n        });\r\n      });\r\n    }\r\n  }, [count, mapStatistic, set, width]);\r\n\r\n  const handleClick = useCallback(\r\n    (statistic) => {\r\n      setCount((prevCount) => prevCount + 1);\r\n      setMapStatistic(statistic);\r\n    },\r\n    [setMapStatistic]\r\n  );\r\n\r\n  return (\r\n    <div className=\"MapSwitcher\" ref={mapSwitcher}>\r\n      <animated.div className=\"highlight\" style={spring}></animated.div>\r\n\r\n      {PRIMARY_STATISTICS.map((statistic, index) => (\r\n        <div\r\n          key={index}\r\n          className={classnames('clickable', {[`is-${statistic}`]: !clicked})}\r\n          onClick={handleClick.bind(this, statistic)}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default React.memo(MapSwitcher, isEqual);\r\n","import { useEffect, useLayoutEffect } from 'react';\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useState, useMemo } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isClient } from './util';\nvar defaultState = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nvar useMeasure = function () {\n    var _a = useState(null), element = _a[0], ref = _a[1];\n    var _b = useState(defaultState), rect = _b[0], setRect = _b[1];\n    var observer = useMemo(function () {\n        return new window.ResizeObserver(function (entries) {\n            if (entries[0]) {\n                var _a = entries[0].contentRect, x = _a.x, y = _a.y, width = _a.width, height = _a.height, top_1 = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n                setRect({ x: x, y: y, width: width, height: height, top: top_1, left: left, bottom: bottom, right: right });\n            }\n        });\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        if (!element)\n            return;\n        observer.observe(element);\n        return function () {\n            observer.disconnect();\n        };\n    }, [element]);\n    return [ref, rect];\n};\nvar useMeasureMock = function () { return [function () { }, defaultState]; };\nexport default (isClient && !!window.ResizeObserver) ? useMeasure : useMeasureMock;\n"],"sourceRoot":""}
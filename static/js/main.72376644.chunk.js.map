{"version":3,"sources":["utils/commonFunctions.js","constants.js","serviceWorker.js","i18n/index.js","index.js"],"names":["locale","numberFormatter","Intl","NumberFormat","maximumFractionDigits","isDevelopmentOrTest","getIndiaDate","utcToZonedTime","Date","getIndiaDateISO","formatISO","representation","getIndiaYesterdayISO","subDays","formatLastUpdated","unformattedDate","then","localePackage","LOCALE_SHORTHANDS","i18n","language","window","localStorage","i18nextLng","formatDistance","parseIndiaDate","isoDate","match","ISO_DATE_REGEX","INDIA_ISO_SUFFIX","formatDate","formatString","date","format","formatNumber","value","option","statistic","NAN_STATISTICS","includes","NaN","isNaN","number","Math","abs","floor","capitalize","s","charAt","toUpperCase","slice","toTitleCase","str","replace","txt","substr","toLowerCase","getStatistic","data","type","count","perMillion","STATISTIC_OPTIONS","normalizeByKey","PER_MILLION_OPTIONS","key","normalizeBy","multiplyFactor","meta","population","tested","confirmed","deceased","recovered","other","normStatistic","currStatisticDelta","currStatistic","prevStatistic","normStatisticDelta","prevNormStatistic","isFinite","getTableStatistic","isPerMillion","lastUpdatedTT","expired","differenceInDays","TESTED_LOOKBACK_DAYS","total","delta","fetcher","url","fetch","response","json","API_ROOT_URL","english","hindi","telugu","kannada","gujarati","marathi","tamil","bengali","punjabi","malayalam","odiya","STATISTIC_DEFINITIONS","displayName","color","options","active","hideDelta","activeRatio","recoveryRatio","cfr","tpr","definitions","Object","keys","reduce","acc","config","configs","STATISTIC_CONFIGS","PRIMARY_STATISTICS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","TIMESERIES_STATISTICS","UPDATES_COUNT","DISTRICT_TABLE_COUNT","D3_TRANSITION_DURATION","MINIGRAPH_LOOKBACK_DAYS","UNASSIGNED_STATE_CODE","UNKNOWN_DISTRICT_KEY","SPRING_CONFIG_NUMBERS","clamp","precision","TIMESERIES_CHART_TYPES","TIMESERIES_LOOKBACKS","BEGINNING","THREE_MONTHS","MONTH","MAP_VIZS","CHOROPLETH","BUBBLES","MAP_VIEWS","STATES","DISTRICTS","MAP_TYPES","COUNTRY","STATE","MAPS_DIR","MAP_META","AP","geoDataFile","mapType","AR","AS","BR","CT","GA","GJ","HR","HP","JK","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","LA","LD","PY","TT","MAP_LEGEND_HEIGHT","STATE_NAMES","stateCodes","stateCodesMap","map","index","push","code","name","STATE_CODES","STATE_CODES_ARRAY","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","use","Backend","LanguageDetector","initReactI18next","init","debug","keySeparator","returnEmptyString","fallbackLng","load","backend","loadPath","addPath","saveMissing","interpolation","escapeValue","App","lazy","rootElement","document","getElementById","main","render","fallback","requestIdleCallback","IntersectionObserver","src","done","js","createElement","onload","onerror","Error","head","appendChild","loadScript","URL","process","href","origin","addEventListener","setTimeout","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.72376644.chunk.js","sourcesContent":["import {\r\n  INDIA_ISO_SUFFIX,\r\n  ISO_DATE_REGEX,\r\n  LOCALE_SHORTHANDS,\r\n  NAN_STATISTICS,\r\n  PER_MILLION_OPTIONS,\r\n  STATISTIC_OPTIONS,\r\n  TESTED_LOOKBACK_DAYS,\r\n} from '../constants';\r\n\r\nimport {\r\n  differenceInDays,\r\n  format,\r\n  formatDistance,\r\n  formatISO,\r\n  subDays,\r\n} from 'date-fns';\r\nimport {utcToZonedTime} from 'date-fns-tz';\r\nimport i18n from 'i18next';\r\n\r\nlet locale = null;\r\nconst numberFormatter = new Intl.NumberFormat('en-IN', {\r\n  maximumFractionDigits: 1,\r\n});\r\n\r\nconst getLocale = () => {\r\n  import('date-fns/locale/').then((localePackage) => {\r\n    locale =\r\n      localePackage[\r\n        LOCALE_SHORTHANDS[i18n.language || window.localStorage.i18nextLng]\r\n      ];\r\n  });\r\n};\r\n\r\nexport const isDevelopmentOrTest = () => {\r\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\r\n    return true;\r\n  return false;\r\n};\r\n\r\nexport const getIndiaDate = () => {\r\n  return utcToZonedTime(new Date(), 'Asia/Kolkata');\r\n};\r\n\r\nexport const getIndiaDateISO = () => {\r\n  return formatISO(getIndiaDate(), {representation: 'date'});\r\n};\r\n\r\nexport const getIndiaYesterdayISO = () => {\r\n  return formatISO(subDays(getIndiaDate(), 1), {representation: 'date'});\r\n};\r\n\r\nexport const formatLastUpdated = (unformattedDate) => {\r\n  getLocale();\r\n  return formatDistance(new Date(unformattedDate), new Date(), {\r\n    locale: locale,\r\n  });\r\n};\r\n\r\nexport const parseIndiaDate = (isoDate) => {\r\n  if (!isoDate) return getIndiaDate();\r\n  if (isoDate.match(ISO_DATE_REGEX)) isoDate += INDIA_ISO_SUFFIX;\r\n  return utcToZonedTime(new Date(isoDate), 'Asia/Kolkata');\r\n};\r\n\r\nexport const formatDate = (unformattedDate, formatString) => {\r\n  if (!unformattedDate) return '';\r\n  if (\r\n    typeof unformattedDate === 'string' &&\r\n    unformattedDate.match(ISO_DATE_REGEX)\r\n  )\r\n    unformattedDate += INDIA_ISO_SUFFIX;\r\n  const date = utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\r\n  return format(date, formatString, {\r\n    locale: locale,\r\n  });\r\n};\r\n\r\nexport const abbreviateNumber = (number) => {\r\n  if (Math.abs(number) < 1e3) return numberFormatter.format(number);\r\n  else if (Math.abs(number) >= 1e3 && Math.abs(number) < 1e5)\r\n    return numberFormatter.format(number / 1e3) + 'K';\r\n  else if (Math.abs(number) >= 1e5 && Math.abs(number) < 1e7)\r\n    return numberFormatter.format(number / 1e5) + 'L';\r\n  else if (Math.abs(number) >= 1e7 && Math.abs(number) < 1e10)\r\n    return numberFormatter.format(number / 1e7) + 'Cr';\r\n  else if (Math.abs(number) >= 1e10 && Math.abs(number) < 1e14)\r\n    return numberFormatter.format(number / 1e10) + 'K Cr';\r\n  else if (Math.abs(number) >= 1e14)\r\n    return numberFormatter.format(number / 1e14) + 'L Cr';\r\n};\r\n\r\nexport const formatNumber = (value, option, statistic) => {\r\n  if (statistic && value === 0 && NAN_STATISTICS.includes(statistic))\r\n    value = NaN;\r\n\r\n  if (isNaN(value)) return '-';\r\n  else if (option === 'short') {\r\n    return abbreviateNumber(value);\r\n  } else if (option === 'int') {\r\n    value = Math.floor(value);\r\n  }\r\n  return numberFormatter.format(value) + (option === '%' ? '%' : '');\r\n};\r\n\r\nexport const capitalize = (s) => {\r\n  if (typeof s !== 'string') return '';\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nexport const toTitleCase = (str) => {\r\n  return str.replace(/\\w\\S*/g, function (txt) {\r\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n  });\r\n};\r\n\r\nexport const getStatistic = (data, type, statistic, perMillion = false) => {\r\n  const {key, normalizeByKey: normalizeBy, multiplyFactor} = {\r\n    ...STATISTIC_OPTIONS[statistic],\r\n    ...(perMillion &&\r\n      !STATISTIC_OPTIONS[statistic]?.normalizeByKey &&\r\n      PER_MILLION_OPTIONS),\r\n  };\r\n\r\n  let count;\r\n  if (key === 'population') {\r\n    count = type === 'total' ? data?.meta?.population : 0;\r\n  } else if (key === 'tested') {\r\n    count = data?.[type]?.tested;\r\n  } else if (key === 'active') {\r\n    const confirmed = data?.[type]?.confirmed || 0;\r\n    const deceased = data?.[type]?.deceased || 0;\r\n    const recovered = data?.[type]?.recovered || 0;\r\n    const other = data?.[type]?.other || 0;\r\n    count = confirmed - deceased - recovered - other;\r\n  } else {\r\n    count = data?.[type]?.[key];\r\n  }\r\n\r\n  if (normalizeBy) {\r\n    if (type === 'total') {\r\n      const normStatistic = getStatistic(data, 'total', normalizeBy);\r\n      count /= normStatistic;\r\n    } else {\r\n      const currStatisticDelta = count;\r\n      const currStatistic = getStatistic(data, 'total', key);\r\n      const prevStatistic = currStatistic - currStatisticDelta;\r\n\r\n      const normStatisticDelta = getStatistic(data, 'delta', {\r\n        key: normalizeBy,\r\n      });\r\n      const normStatistic = getStatistic(data, 'total', normalizeBy);\r\n      const prevNormStatistic = normStatistic - normStatisticDelta;\r\n\r\n      count = currStatistic / normStatistic - prevStatistic / prevNormStatistic;\r\n    }\r\n  }\r\n\r\n  return (multiplyFactor || 1) * ((isFinite(count) && count) || 0);\r\n};\r\n\r\nexport const getTableStatistic = (\r\n  data,\r\n  statistic,\r\n  isPerMillion,\r\n  lastUpdatedTT\r\n) => {\r\n  const expired =\r\n    (STATISTIC_OPTIONS[statistic].key === 'tested' ||\r\n      STATISTIC_OPTIONS[statistic].normalizeByKey === 'tested') &&\r\n    differenceInDays(\r\n      lastUpdatedTT,\r\n      parseIndiaDate(data.meta?.tested?.['last_updated'])\r\n    ) > TESTED_LOOKBACK_DAYS;\r\n\r\n  const total = !expired\r\n    ? getStatistic(data, 'total', statistic, isPerMillion)\r\n    : 0;\r\n  const delta = !expired\r\n    ? getStatistic(data, 'delta', statistic, isPerMillion)\r\n    : 0;\r\n  return {total, delta};\r\n};\r\n\r\nexport const fetcher = (url) => {\r\n  return fetch(url).then((response) => {\r\n    return response.json();\r\n  });\r\n};\r\n","export const API_ROOT_URL = 'https://api.covid19india.org/v4/min';\r\n\r\nexport const LOCALE_SHORTHANDS = {\r\n  english: 'en-US',\r\n  hindi: 'hi',\r\n  telugu: 'te',\r\n  kannada: 'en-US',\r\n  gujarati: 'gu',\r\n  marathi: 'en-US',\r\n  tamil: 'ta',\r\n  bengali: 'bn',\r\n  punjabi: 'en-US',\r\n  malayalam: 'en-US',\r\n  odiya: 'en-US',\r\n};\r\n\r\nexport const STATISTIC_DEFINITIONS = {\r\n  confirmed: {\r\n    displayName: 'confirmed',\r\n    color: '#ff073a',\r\n    format: 'int',\r\n    options: {key: 'confirmed'},\r\n  },\r\n  active: {\r\n    displayName: 'active',\r\n    color: '#007bff',\r\n    format: 'int',\r\n    options: {key: 'active'},\r\n    hideDelta: true,\r\n  },\r\n  recovered: {\r\n    displayName: 'recovered',\r\n    color: '#28a745',\r\n    format: 'int',\r\n    options: {key: 'recovered'},\r\n  },\r\n  deceased: {\r\n    displayName: 'deceased',\r\n    color: '#6c757d',\r\n    format: 'int',\r\n    options: {key: 'deceased'},\r\n  },\r\n  other: {\r\n    displayName: 'other',\r\n    format: 'int',\r\n    options: {key: 'other'},\r\n  },\r\n  tested: {\r\n    displayName: 'tested',\r\n    color: '#4b1eaa',\r\n    format: 'short',\r\n    options: {key: 'tested'},\r\n  },\r\n  activeRatio: {\r\n    displayName: 'active ratio',\r\n    format: '%',\r\n    options: {\r\n      key: 'active',\r\n      normalizeByKey: 'confirmed',\r\n      multiplyFactor: 100,\r\n    },\r\n    hideDelta: true,\r\n  },\r\n  recoveryRatio: {\r\n    displayName: 'recovery ratio',\r\n    format: '%',\r\n    options: {\r\n      key: 'recovered',\r\n      normalizeByKey: 'confirmed',\r\n      multiplyFactor: 100,\r\n    },\r\n    hideDelta: true,\r\n  },\r\n  cfr: {\r\n    displayName: 'case fatality ratio',\r\n    format: '%',\r\n    options: {\r\n      key: 'deceased',\r\n      normalizeByKey: 'confirmed',\r\n      multiplyFactor: 100,\r\n    },\r\n    hideDelta: true,\r\n  },\r\n  tpr: {\r\n    displayName: 'test positivity ratio',\r\n    color: '#fd7e14',\r\n    format: '%',\r\n    options: {\r\n      key: 'confirmed',\r\n      normalizeByKey: 'tested',\r\n      multiplyFactor: 100,\r\n    },\r\n    hideDelta: true,\r\n  },\r\n  population: {\r\n    displayName: 'population',\r\n    format: 'short',\r\n    options: {key: 'population'},\r\n    hideDelta: true,\r\n  },\r\n};\r\n\r\nconst definitions = Object.keys(STATISTIC_DEFINITIONS).reduce(\r\n  (acc, statistic) => {\r\n    const {options, ...config} = STATISTIC_DEFINITIONS[statistic];\r\n    acc.options[statistic] = options;\r\n    acc.configs[statistic] = config;\r\n    return acc;\r\n  },\r\n  {options: {}, configs: {}}\r\n);\r\n\r\nexport const STATISTIC_CONFIGS = definitions.configs;\r\nexport const STATISTIC_OPTIONS = definitions.options;\r\n\r\nexport const PER_MILLION_OPTIONS = {\r\n  normalizeByKey: 'population',\r\n  multiplyFactor: 1e6,\r\n};\r\n\r\nexport const NAN_STATISTICS = ['tested', 'tpr', 'population'];\r\n\r\nexport const PRIMARY_STATISTICS = [\r\n  'confirmed',\r\n  'active',\r\n  'recovered',\r\n  'deceased',\r\n];\r\n\r\nexport const TABLE_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\r\n\r\nexport const TABLE_STATISTICS_EXPANDED = Object.keys(STATISTIC_DEFINITIONS);\r\n\r\nexport const TIMESERIES_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\r\n\r\nexport const UPDATES_COUNT = 5;\r\n\r\nexport const DISTRICT_TABLE_COUNT = 30;\r\n\r\nexport const D3_TRANSITION_DURATION = 300;\r\n\r\nexport const MINIGRAPH_LOOKBACK_DAYS = 20;\r\n\r\nexport const TESTED_LOOKBACK_DAYS = 7;\r\n\r\nexport const UNASSIGNED_STATE_CODE = 'UN';\r\n\r\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\r\n\r\nexport const ISO_DATE_REGEX = /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;\r\n\r\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\r\n\r\nexport const SPRING_CONFIG_NUMBERS = {clamp: true, precision: 1};\r\n\r\nexport const TIMESERIES_CHART_TYPES = {\r\n  total: 'Cumulative',\r\n  delta: 'Daily',\r\n};\r\n\r\nexport const TIMESERIES_LOOKBACKS = {\r\n  BEGINNING: 'Beginning',\r\n  THREE_MONTHS: '3 Months',\r\n  MONTH: '1 Month',\r\n};\r\n\r\nexport const MAP_VIZS = {\r\n  CHOROPLETH: 0,\r\n  BUBBLES: 1,\r\n};\r\n\r\nexport const MAP_VIEWS = {\r\n  STATES: 0,\r\n  DISTRICTS: 1,\r\n};\r\n\r\nexport const MAP_TYPES = {\r\n  COUNTRY: 0,\r\n  STATE: 1,\r\n};\r\n\r\nexport const MAPS_DIR =\r\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/projected_maps';\r\n\r\nexport const MAP_META = {\r\n  AP: {\r\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  AR: {\r\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  AS: {\r\n    geoDataFile: `${MAPS_DIR}/assam.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  BR: {\r\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  CT: {\r\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  GA: {\r\n    geoDataFile: `${MAPS_DIR}/goa.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  GJ: {\r\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  HR: {\r\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  HP: {\r\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  JK: {\r\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  JH: {\r\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  KA: {\r\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  KL: {\r\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  MP: {\r\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  MH: {\r\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  MN: {\r\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  ML: {\r\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  MZ: {\r\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  NL: {\r\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  OR: {\r\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  PB: {\r\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  RJ: {\r\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  SK: {\r\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  TN: {\r\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  TG: {\r\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  TR: {\r\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  UT: {\r\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  UP: {\r\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  WB: {\r\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  AN: {\r\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  CH: {\r\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  DN: {\r\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  DL: {\r\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  LA: {\r\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  LD: {\r\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  PY: {\r\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  TT: {\r\n    geoDataFile: `${MAPS_DIR}/india.json`,\r\n    mapType: MAP_TYPES.COUNTRY,\r\n  },\r\n};\r\n\r\nexport const MAP_LEGEND_HEIGHT = 50;\r\n\r\nexport const STATE_NAMES = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n  TT: 'India',\r\n  [UNASSIGNED_STATE_CODE]: 'Unassigned',\r\n};\r\n\r\nconst stateCodes = [];\r\nconst stateCodesMap = {};\r\nObject.keys(STATE_NAMES).map((key, index) => {\r\n  stateCodesMap[STATE_NAMES[key]] = key;\r\n  stateCodes.push({code: key, name: STATE_NAMES[key]});\r\n  return null;\r\n});\r\nexport const STATE_CODES = stateCodesMap;\r\nexport const STATE_CODES_ARRAY = stateCodes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () =>\r\n      setTimeout(() => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n\r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      }, 3000)\r\n    );\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {isDevelopmentOrTest} from '../utils/commonFunctions';\r\n\r\nimport i18n from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nconst DEBUG = false;\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    debug: isDevelopmentOrTest() && DEBUG,\r\n    keySeparator: false,\r\n    returnEmptyString: false,\r\n    fallbackLng: 'english',\r\n    load: 'languageOnly',\r\n    backend: {\r\n      loadPath: 'https://api.covid19india.org/locales/locale_{{lng}}.json',\r\n      addPath: 'http://localhost:9999/',\r\n    },\r\n    saveMissing: isDevelopmentOrTest() && DEBUG,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","// import './wdyr';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n';\r\n\r\nimport React, {Suspense, lazy} from 'react';\r\nimport {render} from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst App = lazy(() => import('./App'));\r\nconst rootElement = document.getElementById('root');\r\n\r\nconst main = () =>\r\n  render(\r\n    <Suspense fallback={<div />}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Suspense>,\r\n    rootElement\r\n  );\r\n\r\nconst browserSupportsAllFeatures = () => {\r\n  return window.requestIdleCallback && window.IntersectionObserver;\r\n};\r\n\r\nconst loadScript = (src, done) => {\r\n  const js = document.createElement('script');\r\n  js.src = src;\r\n  js.onload = function () {\r\n    done();\r\n  };\r\n  js.onerror = function () {\r\n    done(new Error('Failed to load script ' + src));\r\n  };\r\n  document.head.appendChild(js);\r\n};\r\n\r\nif (browserSupportsAllFeatures()) {\r\n  main();\r\n} else {\r\n  loadScript(\r\n    'https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=requestIdleCallback%2CIntersectionObserver',\r\n    main\r\n  );\r\n}\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/useResizeObserver.js","components/MapLegend.js","components/MapVisualizer.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve","MapLegend","data","mapViz","mapScale","statistic","t","useTranslation","svgRef","useRef","wrapperRef","svg","select","getBoundingClientRect","width","height","MAP_VIZS","BUBBLES","transition","duration","D3_TRANSITION_DURATION","attr","selectAll","remove","text","domainMax","domain","join","d","yScale","copy","range","call","axisRight","tickSize","tickPadding","tickValues","tickFormat","num","formatNumber","style","g","color","title","marginTop","marginRight","marginBottom","marginLeft","ticks","ordinalWeights","x","tickAdjust","interpolate","n","Math","min","length","rangeRound","quantize","ramp","toDataURL","interpolator","Object","assign","interpolateRound","undefined","round","map","i","quantile","format","invertExtent","thresholds","quantiles","thresholdFormat","scaleLinear","append","widthScale","reduce","a","b","xPos","w","slice","acc","scaleOrdinal","enter","scaleBand","max","bandwidth","axisBottom","on","node","legend","capitalize","CHOROPLETH","Number","isInteger","className","MAP_LEGEND_HEIGHT","id","preserveAspectRatio","position","canvas","context","getContext","fillStyle","fillRect","getTotalStatistic","getStatistic","MapVisualizer","mapCode","mapView","regionHighlighted","changeMap","setRegionHighlighted","isCountryLoaded","mapMeta","MAP_META","history","useHistory","geoData","useSWR","geoDataFile","file","json","suspense","revalidateOnFocus","statisticMax","useMemo","stateCodes","keys","filter","stateCode","includes","MAP_VIEWS","STATES","districts","values","districtData","statisticTotal","scaleSqrt","clamp","nice","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","colorInterpolator","path","geoPath","geoIdentity","fillColor","useCallback","STATE_CODES","properties","st_nm","district","stateData","strokeColor","alpha","STATISTIC_CONFIGS","features","topojson","objects","states","mapType","MAP_TYPES","COUNTRY","feature","state","obj","populateTexts","regionSelection","toTitleCase","onceTouchedRegion","districtName","T","update","exit","event","stopPropagation","STATE","push","window","innerWidth","sel","bind","requestIdleCallback","circlesData","value","DISTRICTS","UNKNOWN_DISTRICT_KEY","sort","featureA","featureB","centroid","meshStates","meshDistricts","stateName","STATE_NAMES","each","highlighted","this","parentNode","appendChild","Fragment","viewBox","classnames","colorInterpolationFilters","type"],"mappings":"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","file":"static/js/24.0e16a443.chunk.js","sourcesContent":["import {ResizeObserver} from '@juggle/resize-observer';\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport const useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries, observer) => {\r\n      entries.forEach((entry, index) => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;\r\n","import {\r\n  D3_TRANSITION_DURATION,\r\n  MAP_LEGEND_HEIGHT,\r\n  MAP_VIZS,\r\n} from '../constants';\r\nimport {useResizeObserver} from '../hooks/useResizeObserver';\r\nimport {capitalize, formatNumber} from '../utils/commonFunctions';\r\n\r\nimport {range, quantile} from 'd3-array';\r\nimport {axisRight, axisBottom} from 'd3-axis';\r\nimport {format} from 'd3-format';\r\nimport {interpolate, interpolateRound, quantize} from 'd3-interpolate';\r\nimport {scaleLinear, scaleOrdinal, scaleBand} from 'd3-scale';\r\nimport {select} from 'd3-selection';\r\nimport React, {useEffect, useRef} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nfunction MapLegend({data, mapViz, mapScale, statistic}) {\r\n  const {t} = useTranslation();\r\n\r\n  const svgRef = useRef(null);\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    let {width, height} =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n    if (!width || !height)\r\n      ({width, height} = wrapperRef.current.getBoundingClientRect());\r\n\r\n    if (!width || !height) return;\r\n\r\n    if (mapViz === MAP_VIZS.BUBBLES) {\r\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\r\n      svg\r\n        .select('.ramp')\r\n        .transition(t)\r\n        .attr('opacity', 0)\r\n        .attr('xlink:href', null);\r\n\r\n      svg\r\n        .select('.bars')\r\n        .selectAll('rect')\r\n        .transition(t)\r\n        .attr('opacity', 0)\r\n        .remove();\r\n      svg.selectAll('.axis > *:not(.axistext)').remove();\r\n      svg.select('.axistext').text('');\r\n\r\n      const domainMax = mapScale.domain()[1];\r\n\r\n      const legend = svg\r\n        .select('.circles')\r\n        .attr('transform', `translate(48,40)`)\r\n        .attr('text-anchor', 'middle');\r\n\r\n      legend\r\n        .selectAll('circle')\r\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\r\n        .join('circle')\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#ccc')\r\n        .transition(t)\r\n        .attr('cy', (d) => -mapScale(d))\r\n        .attr('r', mapScale);\r\n\r\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\r\n\r\n      svg\r\n        .select('.circleAxis')\r\n        .attr('transform', `translate(48,50)`)\r\n        .transition(t)\r\n        .call(\r\n          axisRight(yScale)\r\n            .tickSize(0)\r\n            .tickPadding(0)\r\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\r\n            .tickFormat((num) => formatNumber(num, 'short'))\r\n        )\r\n        .selectAll('.tick text')\r\n        .style('text-anchor', 'middle');\r\n\r\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\r\n    } else {\r\n      svg.call(() =>\r\n        legend({\r\n          svg: svg,\r\n          color: mapScale,\r\n          title: `${t(capitalize(statistic))} ${t('cases')}`,\r\n          width: width,\r\n          height: height,\r\n          ticks: 5,\r\n          tickFormat: function (d, i, n) {\r\n            if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) return;\r\n            if (i === n.length - 1) return formatNumber(d) + '+';\r\n            return formatNumber(d);\r\n          },\r\n          marginLeft: 2,\r\n          marginRight: 0,\r\n        })\r\n      );\r\n    }\r\n  }, [t, dimensions, mapScale, mapViz, statistic]);\r\n\r\n  return (\r\n    <div\r\n      className=\"svg-parent maplegend\"\r\n      style={{height: MAP_LEGEND_HEIGHT}}\r\n      ref={wrapperRef}\r\n    >\r\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\r\n        <image className=\"ramp\" />\r\n        <g className=\"bars\"></g>\r\n        <g className=\"circles\"></g>\r\n        <g className=\"circleAxis\"></g>\r\n        <g className=\"axis\">\r\n          <text className=\"axistext\" />\r\n        </g>\r\n      </svg>\r\n      <canvas\r\n        className=\"color-scale\"\r\n        style={{position: 'absolute', height: 0}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapLegend;\r\n\r\nfunction legend({\r\n  svg,\r\n  color,\r\n  title,\r\n  tickSize = 6,\r\n  width = 320,\r\n  height = 44 + tickSize,\r\n  marginTop = 18,\r\n  marginRight = 0,\r\n  marginBottom = 16 + tickSize,\r\n  marginLeft = 0,\r\n  ticks = width / 64,\r\n  tickFormat,\r\n  tickValues,\r\n  ordinalWeights,\r\n} = {}) {\r\n  svg.selectAll('.circles > *').remove();\r\n  svg.selectAll('.circleAxis > *').remove();\r\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\r\n\r\n  let tickAdjust = (g) => {\r\n    const ticks = g.selectAll('.tick line');\r\n    ticks.attr('y1', marginTop + marginBottom - height);\r\n    // select(ticks.nodes()[ticks.size() - 1]).remove();\r\n  };\r\n  let x;\r\n\r\n  // Continuous\r\n  if (color.interpolate) {\r\n    const n = Math.min(color.domain().length, color.range().length);\r\n\r\n    x = color\r\n      .copy()\r\n      .rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\r\n\r\n    svg\r\n      .select('.ramp')\r\n      .attr('class', 'ramp')\r\n      .attr('x', marginLeft)\r\n      .attr('y', marginTop)\r\n      .attr('width', width - marginLeft - marginRight)\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('preserveAspectRatio', 'none')\r\n      .attr(\r\n        'xlink:href',\r\n        ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL()\r\n      );\r\n  }\r\n\r\n  // Sequential\r\n  else if (color.interpolator) {\r\n    svg\r\n      .select('.bars')\r\n      .selectAll('rect')\r\n      .transition(t)\r\n      .attr('opacity', 0)\r\n      .remove();\r\n\r\n    x = Object.assign(\r\n      color\r\n        .copy()\r\n        .interpolator(interpolateRound(marginLeft, width - marginRight)),\r\n      {\r\n        range() {\r\n          return [marginLeft, width - marginRight];\r\n        },\r\n      }\r\n    );\r\n\r\n    svg\r\n      .select('.ramp')\r\n      .attr('class', 'ramp')\r\n      .attr('x', marginLeft)\r\n      .attr('y', marginTop)\r\n      .attr('width', width - marginLeft - marginRight)\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('preserveAspectRatio', 'none')\r\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\r\n      .transition(t)\r\n      .attr('opacity', 1);\r\n\r\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\r\n    if (!x.ticks) {\r\n      if (tickValues === undefined) {\r\n        const n = Math.round(ticks + 1);\r\n        tickValues = range(n).map((i) => quantile(color.domain(), i / (n - 1)));\r\n      }\r\n      if (typeof tickFormat !== 'function') {\r\n        tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Threshold\r\n  else if (color.invertExtent) {\r\n    const thresholds = color.thresholds\r\n      ? color.thresholds() // scaleQuantize\r\n      : color.quantiles\r\n      ? color.quantiles() // scaleQuantile\r\n      : color.domain(); // scaleThreshold\r\n\r\n    const thresholdFormat =\r\n      tickFormat === undefined\r\n        ? (d) => d\r\n        : typeof tickFormat === 'string'\r\n        ? format(tickFormat)\r\n        : tickFormat;\r\n\r\n    x = scaleLinear()\r\n      .domain([-1, color.range().length - 1])\r\n      .rangeRound([marginLeft, width - marginRight]);\r\n\r\n    svg\r\n      .append('g')\r\n      .selectAll('rect')\r\n      .data(color.range())\r\n      .join('rect')\r\n      .attr('x', (d, i) => x(i - 1))\r\n      .attr('y', marginTop)\r\n      .attr('width', (d, i) => x(i) - x(i - 1))\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('fill', (d) => d);\r\n\r\n    tickValues = range(-1, thresholds.length);\r\n    tickFormat = (i) => {\r\n      if (i === -1) return thresholdFormat(1);\r\n      else if (i === thresholds.length - 1) return;\r\n      else if (i === thresholds.length - 2)\r\n        return thresholdFormat(thresholds[i] + '+', i);\r\n      return thresholdFormat(thresholds[i], i);\r\n    };\r\n  }\r\n\r\n  // Ordinal\r\n  else {\r\n    svg\r\n      .select('.ramp')\r\n      .transition(t)\r\n      .attr('opacity', 0)\r\n      .attr('xlink:href', null);\r\n    if (!ordinalWeights) {\r\n      x = scaleBand()\r\n        .domain(color.domain())\r\n        .rangeRound([marginLeft, width - marginRight]);\r\n      svg\r\n        .selectAll('rect')\r\n        .data(color.domain())\r\n        .join('rect')\r\n        .attr('x', x)\r\n        .attr('y', marginTop)\r\n        .attr('width', Math.max(0, x.bandwidth() - 1))\r\n        .attr('height', height - marginTop - marginBottom)\r\n        .attr('fill', color);\r\n    } else {\r\n      const widthScale = scaleLinear()\r\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\r\n        .rangeRound([0, width - marginLeft - marginRight]);\r\n\r\n      const xPos = ordinalWeights.map((w, i) =>\r\n        ordinalWeights\r\n          .slice(0, i)\r\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\r\n      );\r\n\r\n      x = scaleOrdinal().domain(color.domain()).range(xPos);\r\n\r\n      svg\r\n        .select('.bars')\r\n        .selectAll('rect')\r\n        .data(color.domain())\r\n        .join((enter) =>\r\n          enter\r\n            .append('rect')\r\n            .attr('x', x)\r\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\r\n        )\r\n        .attr('y', marginTop)\r\n        .attr('height', height - marginTop - marginBottom)\r\n        .attr('fill', color)\r\n        .transition(t)\r\n        .attr('x', x)\r\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\r\n        .attr('opacity', 1);\r\n    }\r\n\r\n    tickAdjust = () => {};\r\n  }\r\n\r\n  svg\r\n    .select('.axis')\r\n    .attr('transform', `translate(0,${height - marginBottom})`)\r\n    .transition(t)\r\n    .attr('class', 'axis')\r\n    .call(\r\n      axisBottom(x)\r\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\r\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\r\n        .tickSize(tickSize)\r\n        .tickValues(tickValues)\r\n    )\r\n    .on('start', () => {\r\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\r\n    })\r\n    .call((g) =>\r\n      g\r\n        .select('.axistext')\r\n        .attr('class', 'axistext')\r\n        .attr('x', marginLeft)\r\n        .attr('y', marginTop + marginBottom - height - 6)\r\n        .attr('fill', 'currentColor')\r\n        .attr('text-anchor', 'start')\r\n        .attr('font-weight', 'bold')\r\n        .text(title)\r\n    );\r\n\r\n  return svg.node();\r\n}\r\n\r\nfunction ramp(color, n = 256) {\r\n  // const canvas = document.createElement('canvas');\r\n  const canvas = select('.color-scale').node();\r\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\r\n    '2d'\r\n  );\r\n  for (let i = 0; i < n; ++i) {\r\n    context.fillStyle = color(i / (n - 1));\r\n    context.fillRect(i, 0, 1, 1);\r\n  }\r\n  return canvas;\r\n}\r\n","import MapLegend from './MapLegend';\r\n\r\nimport {\r\n  D3_TRANSITION_DURATION,\r\n  MAP_META,\r\n  MAP_TYPES,\r\n  MAP_VIEWS,\r\n  MAP_VIZS,\r\n  STATE_CODES,\r\n  STATE_NAMES,\r\n  STATISTIC_CONFIGS,\r\n  UNKNOWN_DISTRICT_KEY,\r\n} from '../constants';\r\nimport {\r\n  formatNumber,\r\n  getStatistic,\r\n  toTitleCase,\r\n} from '../utils/commonFunctions';\r\n\r\nimport {AlertIcon} from '@primer/octicons-v2-react';\r\nimport classnames from 'classnames';\r\nimport {max} from 'd3-array';\r\nimport {json} from 'd3-fetch';\r\nimport {geoIdentity, geoPath} from 'd3-geo';\r\nimport {scaleSqrt, scaleSequential} from 'd3-scale';\r\n// eslint-disable-next-line\r\n// import worker from 'workerize-loader!../workers/mapVisualizer';\r\nimport {\r\n  interpolateReds,\r\n  interpolateBlues,\r\n  interpolateGreens,\r\n  interpolateGreys,\r\n  interpolatePurples,\r\n  interpolateOranges,\r\n} from 'd3-scale-chromatic';\r\nimport {select, event} from 'd3-selection';\r\nimport {transition} from 'd3-transition';\r\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useHistory} from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport * as topojson from 'topojson';\r\n\r\nconst [width, height] = [432, 488];\r\n\r\nconst colorInterpolator = (statistic) => {\r\n  switch (statistic) {\r\n    case 'confirmed':\r\n      return (t) => interpolateReds(t * 0.85);\r\n    case 'active':\r\n      return (t) => interpolateBlues(t * 0.85);\r\n    case 'recovered':\r\n      return (t) => interpolateGreens(t * 0.85);\r\n    case 'deceased':\r\n      return (t) => interpolateGreys(t * 0.85);\r\n    case 'tested':\r\n      return (t) => interpolatePurples(t * 0.85);\r\n    default:\r\n      return (t) => interpolateOranges(t * 0.85);\r\n  }\r\n};\r\n\r\nconst getTotalStatistic = (data, statistic) => {\r\n  return getStatistic(data, 'total', statistic);\r\n};\r\n\r\nfunction MapVisualizer({\r\n  mapCode,\r\n  mapView,\r\n  mapViz,\r\n  data,\r\n  changeMap,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  statistic,\r\n  isCountryLoaded,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const svgRef = useRef(null);\r\n\r\n  const mapMeta = MAP_META[mapCode];\r\n  const history = useHistory();\r\n\r\n  const {data: geoData} = useSWR(\r\n    mapMeta.geoDataFile,\r\n    async (file) => {\r\n      return await json(file);\r\n    },\r\n    {suspense: false, revalidateOnFocus: false}\r\n  );\r\n\r\n  const statisticMax = useMemo(() => {\r\n    const stateCodes = Object.keys(data).filter(\r\n      (stateCode) =>\r\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\r\n    );\r\n\r\n    return mapView === MAP_VIEWS.STATES\r\n      ? max(stateCodes, (stateCode) =>\r\n          getTotalStatistic(data[stateCode], statistic)\r\n        )\r\n      : max(stateCodes, (stateCode) =>\r\n          data[stateCode]?.districts\r\n            ? max(Object.values(data[stateCode].districts), (districtData) =>\r\n                getTotalStatistic(districtData, statistic)\r\n              )\r\n            : 0\r\n        );\r\n  }, [data, mapView, statistic]);\r\n\r\n  const statisticTotal = useMemo(() => {\r\n    return getTotalStatistic(data[mapCode], statistic);\r\n  }, [data, mapCode, statistic]);\r\n\r\n  const mapScale = useMemo(() => {\r\n    if (mapViz === MAP_VIZS.BUBBLES) {\r\n      return scaleSqrt([0, Math.max(statisticMax, 1)], [0, 40])\r\n        .clamp(true)\r\n        .nice(3);\r\n    } else {\r\n      return scaleSequential(\r\n        [0, Math.max(1, statisticMax)],\r\n        colorInterpolator(statistic)\r\n      ).clamp(true);\r\n    }\r\n  }, [mapViz, statistic, statisticMax]);\r\n\r\n  const path = useMemo(() => {\r\n    if (!geoData) return null;\r\n    return geoPath(geoIdentity());\r\n  }, [geoData]);\r\n\r\n  const fillColor = useCallback(\r\n    (d) => {\r\n      const stateCode = STATE_CODES[d.properties.st_nm];\r\n      const district = d.properties.district;\r\n      const stateData = data[stateCode];\r\n      const districtData = stateData?.districts?.[district];\r\n      let n;\r\n      if (district) n = getTotalStatistic(districtData, statistic);\r\n      else n = getTotalStatistic(stateData, statistic);\r\n      const color = n === 0 ? '#ffffff00' : mapScale(n);\r\n      return color;\r\n    },\r\n    [data, mapScale, statistic]\r\n  );\r\n\r\n  const strokeColor = useCallback(\r\n    (alpha) => {\r\n      return STATISTIC_CONFIGS[statistic].color + alpha;\r\n    },\r\n    [statistic]\r\n  );\r\n\r\n  const features = useMemo(() => {\r\n    if (!geoData) return null;\r\n    const featuresWrap =\r\n      mapView === MAP_VIEWS.STATES\r\n        ? topojson.feature(geoData, geoData.objects.states).features\r\n        : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz === MAP_VIZS.BUBBLES\r\n        ? [\r\n            ...topojson.feature(geoData, geoData.objects.states).features,\r\n            ...topojson.feature(geoData, geoData.objects.districts).features,\r\n          ]\r\n        : topojson.feature(geoData, geoData.objects.districts).features;\r\n\r\n    // Add id to each feature\r\n    return featuresWrap.map((feature) => {\r\n      const district = feature.properties.district;\r\n      const state = feature.properties.st_nm;\r\n      const obj = Object.assign({}, feature);\r\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\r\n      return obj;\r\n    });\r\n  }, [geoData, mapCode, mapView, mapViz, mapMeta]);\r\n\r\n  const populateTexts = useCallback(\r\n    (regionSelection) => {\r\n      regionSelection.select('title').text((d) => {\r\n        if (mapViz === MAP_VIZS.CHOROPLETH) {\r\n          const state = d.properties.st_nm;\r\n          const stateCode = STATE_CODES[state];\r\n          const district = d.properties.district;\r\n\r\n          const stateData = data[stateCode];\r\n          const districtData = stateData?.districts?.[district];\r\n          let n;\r\n          if (district) n = getTotalStatistic(districtData, statistic);\r\n          else n = getTotalStatistic(stateData, statistic);\r\n          return (\r\n            formatNumber(100 * (n / (statisticTotal || 0.001))) +\r\n            '% from ' +\r\n            toTitleCase(district ? district : state)\r\n          );\r\n        }\r\n      });\r\n    },\r\n    [mapViz, data, statistic, statisticTotal]\r\n  );\r\n\r\n  const onceTouchedRegion = useRef(null);\r\n\r\n  // Reset on tapping outside map\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n\r\n    svg.attr('pointer-events', 'auto').on('click', () => {\r\n      onceTouchedRegion.current = null;\r\n      setRegionHighlighted({\r\n        stateCode: mapCode,\r\n        districtName: null,\r\n      });\r\n    });\r\n  }, [mapCode, setRegionHighlighted]);\r\n\r\n  // Choropleth\r\n  useEffect(() => {\r\n    if (!geoData) return;\r\n    const svg = select(svgRef.current);\r\n    const T = transition().duration(D3_TRANSITION_DURATION);\r\n\r\n    const regionSelection = svg\r\n      .select('.regions')\r\n      .selectAll('path')\r\n      .data(mapViz !== MAP_VIZS.BUBBLES ? features : [], (d) => d.id)\r\n      .join(\r\n        (enter) =>\r\n          enter\r\n            .append('path')\r\n            .attr('d', path)\r\n            .attr('stroke-width', 1.8)\r\n            .attr('stroke-opacity', 0)\r\n            .style('cursor', 'pointer')\r\n            .on('mouseenter', (d) => {\r\n              setRegionHighlighted({\r\n                stateCode: STATE_CODES[d.properties.st_nm],\r\n                districtName: d.properties.district,\r\n              });\r\n            })\r\n            .attr('fill', '#fff0')\r\n            .attr('stroke', '#fff0')\r\n            .call((enter) => {\r\n              enter.append('title');\r\n            }),\r\n        (update) => update,\r\n        (exit) =>\r\n          exit\r\n            .transition(T)\r\n            .attr('stroke', '#fff0')\r\n            .attr('fill', '#fff0')\r\n            .remove()\r\n      )\r\n      .attr('pointer-events', 'all')\r\n      .on('touchstart', (d) => {\r\n        if (onceTouchedRegion.current === d) onceTouchedRegion.current = null;\r\n        else onceTouchedRegion.current = d;\r\n      })\r\n      .on('click', (d) => {\r\n        event.stopPropagation();\r\n        const stateCode = STATE_CODES[d.properties.st_nm];\r\n        if (\r\n          onceTouchedRegion.current ||\r\n          mapMeta.mapType === MAP_TYPES.STATE ||\r\n          !data[stateCode]?.districts\r\n        )\r\n          return;\r\n        // Disable pointer events till the new map is rendered\r\n        svg.attr('pointer-events', 'none');\r\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\r\n        // Switch map\r\n        history.push(\r\n          `/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\r\n        );\r\n      })\r\n      .call((sel) => {\r\n        sel\r\n          .transition(T)\r\n          .attr('fill', fillColor)\r\n          .attr('stroke', strokeColor.bind(this, ''));\r\n      });\r\n\r\n    window.requestIdleCallback(() => {\r\n      populateTexts(regionSelection);\r\n    });\r\n  }, [\r\n    mapViz,\r\n    data,\r\n    features,\r\n    fillColor,\r\n    geoData,\r\n    history,\r\n    mapMeta.mapType,\r\n    path,\r\n    populateTexts,\r\n    setRegionHighlighted,\r\n    strokeColor,\r\n  ]);\r\n\r\n  // Bubble\r\n  useEffect(() => {\r\n    if (!features) return;\r\n\r\n    const svg = select(svgRef.current);\r\n    const T = transition().duration(D3_TRANSITION_DURATION);\r\n\r\n    let circlesData = [];\r\n\r\n    if (mapViz === MAP_VIZS.BUBBLES) {\r\n      circlesData = features\r\n        .map((feature) => {\r\n          const stateCode = STATE_CODES[feature.properties.st_nm];\r\n          const districtName = feature.properties.district;\r\n          const stateData = data[stateCode];\r\n\r\n          if (mapView === MAP_VIEWS.STATES) {\r\n            feature.value = getTotalStatistic(stateData, statistic);\r\n          } else if (mapView === MAP_VIEWS.DISTRICTS) {\r\n            const districtData = stateData?.districts?.[districtName];\r\n\r\n            if (districtName)\r\n              feature.value = getTotalStatistic(districtData, statistic);\r\n            else\r\n              feature.value = getTotalStatistic(\r\n                stateData?.districts?.[UNKNOWN_DISTRICT_KEY],\r\n                statistic\r\n              );\r\n          }\r\n\r\n          return feature;\r\n        })\r\n        .sort((featureA, featureB) => featureB.value - featureB.value);\r\n    }\r\n\r\n    svg\r\n      .select('.circles')\r\n      .selectAll('circle')\r\n      .data(circlesData, (feature) => feature.id)\r\n      .join(\r\n        (enter) =>\r\n          enter\r\n            .append('circle')\r\n            .attr(\r\n              'transform',\r\n              (feature) => `translate(${path.centroid(feature)})`\r\n            )\r\n            .attr('fill-opacity', 0.25)\r\n            .style('cursor', 'pointer')\r\n            .attr('pointer-events', 'all'),\r\n        (update) => update,\r\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\r\n      )\r\n      .on('mouseenter', (feature) => {\r\n        setRegionHighlighted({\r\n          stateCode: STATE_CODES[feature.properties.st_nm],\r\n          districtName:\r\n            mapView === MAP_VIEWS.STATES\r\n              ? null\r\n              : feature.properties.district || UNKNOWN_DISTRICT_KEY,\r\n        });\r\n      })\r\n      .on('touchstart', (feature) => {\r\n        if (onceTouchedRegion.current === feature)\r\n          onceTouchedRegion.current = null;\r\n        else onceTouchedRegion.current = feature;\r\n      })\r\n      .on('click', (feature) => {\r\n        event.stopPropagation();\r\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\r\n          return;\r\n        history.push(\r\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\r\n            window.innerWidth < 769 ? '#MapExplorer' : ''\r\n          }`\r\n        );\r\n      })\r\n      .transition(T)\r\n      .attr('fill', STATISTIC_CONFIGS[statistic].color + '70')\r\n      .attr('stroke', STATISTIC_CONFIGS[statistic].color + '70')\r\n      .attr('r', (feature) => mapScale(feature.value));\r\n  }, [\r\n    mapMeta.mapType,\r\n    mapViz,\r\n    mapView,\r\n    data,\r\n    features,\r\n    history,\r\n    mapScale,\r\n    path,\r\n    setRegionHighlighted,\r\n    statistic,\r\n  ]);\r\n\r\n  // Boundaries\r\n  useEffect(() => {\r\n    if (!geoData) return;\r\n    const svg = select(svgRef.current);\r\n    const T = transition().duration(D3_TRANSITION_DURATION);\r\n\r\n    let meshStates = [];\r\n    let meshDistricts = [];\r\n\r\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n      meshStates = [topojson.mesh(geoData, geoData.objects.states)];\r\n      meshStates[0].id = `${mapCode}-states`;\r\n    }\r\n\r\n    if (\r\n      mapMeta.mapType === MAP_TYPES.STATE ||\r\n      (mapView === MAP_VIEWS.DISTRICTS && mapViz === MAP_VIZS.CHOROPLETH)\r\n    ) {\r\n      // Add id to mesh\r\n      meshDistricts = [topojson.mesh(geoData, geoData.objects.districts)];\r\n      meshDistricts[0].id = `${mapCode}-districts`;\r\n    }\r\n\r\n    svg\r\n      .select('.state-borders')\r\n      .attr('fill', 'none')\r\n      .attr('stroke-width', 1.5)\r\n      .selectAll('path')\r\n      .data(meshStates, (d) => d.id)\r\n      .join(\r\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\r\n        (update) => update,\r\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\r\n      )\r\n      .transition(T)\r\n      .attr('stroke', strokeColor.bind(this, '40'));\r\n\r\n    svg\r\n      .select('.district-borders')\r\n      .attr('fill', 'none')\r\n      .attr('stroke-width', 1.5)\r\n      .selectAll('path')\r\n      .data(meshDistricts, (d) => d.id)\r\n      .join(\r\n        (enter) =>\r\n          enter\r\n            .append('path')\r\n            .attr('d', path)\r\n            .attr('d', path)\r\n            .attr('stroke', '#fff0'),\r\n        (update) => update,\r\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\r\n      )\r\n      .transition(T)\r\n      .attr('stroke', strokeColor.bind(this, '40'));\r\n  }, [\r\n    geoData,\r\n    mapMeta,\r\n    mapCode,\r\n    mapViz,\r\n    mapView,\r\n    statistic,\r\n    path,\r\n    strokeColor,\r\n  ]);\r\n\r\n  // Highlight\r\n  useEffect(() => {\r\n    const stateCode = regionHighlighted.stateCode;\r\n    const stateName = STATE_NAMES[stateCode];\r\n    const district = regionHighlighted.districtName;\r\n\r\n    const svg = select(svgRef.current);\r\n\r\n    if (mapViz === MAP_VIZS.BUBBLES) {\r\n      svg\r\n        .select('.circles')\r\n        .selectAll('circle')\r\n        .attr('fill-opacity', (d) => {\r\n          const highlighted =\r\n            stateName === d.properties.st_nm &&\r\n            ((!district && stateCode !== mapCode) ||\r\n              district === d.properties?.district ||\r\n              mapView === MAP_VIEWS.STATES ||\r\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\r\n          return highlighted ? 1 : 0.25;\r\n        });\r\n    } else {\r\n      svg\r\n        .select('.regions')\r\n        .selectAll('path')\r\n        .each(function (d) {\r\n          const highlighted =\r\n            stateName === d.properties.st_nm &&\r\n            ((!district && stateCode !== mapCode) ||\r\n              district === d.properties?.district ||\r\n              mapView === MAP_VIEWS.STATES);\r\n          if (highlighted) this.parentNode.appendChild(this);\r\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\r\n        });\r\n    }\r\n  }, [\r\n    geoData,\r\n    data,\r\n    mapCode,\r\n    mapView,\r\n    mapViz,\r\n    regionHighlighted.stateCode,\r\n    regionHighlighted.districtName,\r\n    statistic,\r\n  ]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"svg-parent\">\r\n        <svg\r\n          id=\"chart\"\r\n          viewBox={`0 0 ${width} ${height}`}\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n          ref={svgRef}\r\n        >\r\n          <g className=\"regions\" />\r\n          <g className=\"state-borders\" />\r\n          <g className=\"district-borders\" />\r\n          <g className=\"circles\" />\r\n        </svg>\r\n        {mapMeta.mapType === MAP_TYPES.STATE &&\r\n          !!getTotalStatistic(\r\n            data[mapCode]?.districts?.[UNKNOWN_DISTRICT_KEY],\r\n            statistic\r\n          ) && (\r\n            <div className={classnames('disclaimer', `is-${statistic}`)}>\r\n              <AlertIcon />\r\n              <span>\r\n                {t('District-wise data not available in state bulletin')}\r\n              </span>\r\n            </div>\r\n          )}\r\n      </div>\r\n\r\n      {mapScale && <MapLegend {...{data, mapViz, mapScale, statistic}} />}\r\n\r\n      <svg style={{position: 'absolute', height: 0}}>\r\n        <defs>\r\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\r\n            <feColorMatrix\r\n              type=\"matrix\"\r\n              values=\"0.91372549  0           0            0  0.08627451\r\n                      0           0.91372549  0            0  0.08627451\r\n                      0           0           0.854901961  0  0.145098039\r\n                      0           0           0            1  0\"\r\n            />\r\n          </filter>\r\n        </defs>\r\n      </svg>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MapVisualizer;\r\n"],"sourceRoot":""}
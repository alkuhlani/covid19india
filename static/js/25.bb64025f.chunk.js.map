{"version":3,"sources":["components/Minigraphs.js","../node_modules/fast-deep-equal/index.js"],"names":["margin","React","memo","timeseries","timelineDate","date","refs","useRef","dates","useMemo","cutOffDateUpper","getIndiaYesterdayISO","pastDates","Object","keys","filter","lastDate","length","cutOffDateLower","formatISO","subDays","parseIndiaDate","MINIGRAPH_LOOKBACK_DAYS","representation","useEffect","T","chartRight","chartBottom","xScale","scaleTime","clamp","domain","range","current","forEach","ref","index","pathLength","svg","select","statistic","PRIMARY_STATISTICS","color","STATISTIC_CONFIGS","dailyMaxAbs","max","Math","abs","getStatistic","yScale","scaleLinear","linePath","line","curve","curveMonotoneX","x","y","selectAll","data","join","enter","append","attr","this","getTotalLength","call","transition","delay","duration","update","attrTween","previous","interpolatePath","style","className","map","key","classnames","el","width","height","viewBox","preserveAspectRatio","prevProps","currProps","forceRender","equal","stateCode","module","exports","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty"],"mappings":"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","file":"static/js/25.bb64025f.chunk.js","sourcesContent":["import {\r\n  MINIGRAPH_LOOKBACK_DAYS,\r\n  PRIMARY_STATISTICS,\r\n  STATISTIC_CONFIGS,\r\n} from '../constants';\r\nimport {\r\n  getStatistic,\r\n  getIndiaYesterdayISO,\r\n  parseIndiaDate,\r\n} from '../utils/commonFunctions';\r\n\r\nimport classnames from 'classnames';\r\nimport {max} from 'd3-array';\r\nimport {interpolatePath} from 'd3-interpolate-path';\r\nimport {scaleTime, scaleLinear} from 'd3-scale';\r\nimport {select} from 'd3-selection';\r\nimport {line, curveMonotoneX} from 'd3-shape';\r\n// eslint-disable-next-line\r\nimport {transition} from 'd3-transition';\r\nimport {formatISO, subDays} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useEffect, useRef, useMemo} from 'react';\r\n\r\n// Dimensions\r\nconst [width, height] = [100, 75];\r\nconst margin = {top: 10, right: 10, bottom: 2, left: 5};\r\n\r\nfunction Minigraphs({timeseries, date: timelineDate}) {\r\n  const refs = useRef([]);\r\n\r\n  const dates = useMemo(() => {\r\n    const cutOffDateUpper = timelineDate || getIndiaYesterdayISO();\r\n    const pastDates = Object.keys(timeseries || {}).filter(\r\n      (date) => date <= cutOffDateUpper\r\n    );\r\n    const lastDate = pastDates[pastDates.length - 1];\r\n\r\n    const cutOffDateLower = formatISO(\r\n      subDays(parseIndiaDate(lastDate), MINIGRAPH_LOOKBACK_DAYS),\r\n      {representation: 'date'}\r\n    );\r\n    return pastDates.filter((date) => date >= cutOffDateLower);\r\n  }, [timeseries, timelineDate]);\r\n\r\n  useEffect(() => {\r\n    const T = dates.length;\r\n\r\n    const chartRight = width - margin.right;\r\n    const chartBottom = height - margin.bottom;\r\n\r\n    const xScale = scaleTime()\r\n      .clamp(true)\r\n      .domain(T ? [parseIndiaDate(dates[0]), parseIndiaDate(dates[T - 1])] : [])\r\n      .range([margin.left, chartRight]);\r\n\r\n    refs.current.forEach((ref, index) => {\r\n      const svg = select(ref);\r\n      const statistic = PRIMARY_STATISTICS[index];\r\n      const color = STATISTIC_CONFIGS[statistic].color;\r\n\r\n      const dailyMaxAbs = max(dates, (date) =>\r\n        Math.abs(getStatistic(timeseries[date], 'delta', statistic))\r\n      );\r\n\r\n      const yScale = scaleLinear()\r\n        .clamp(true)\r\n        .domain([-dailyMaxAbs, dailyMaxAbs])\r\n        .range([chartBottom, margin.top]);\r\n\r\n      const linePath = line()\r\n        .curve(curveMonotoneX)\r\n        .x((date) => xScale(parseIndiaDate(date)))\r\n        .y((date) =>\r\n          yScale(getStatistic(timeseries[date], 'delta', statistic))\r\n        );\r\n\r\n      let pathLength;\r\n      svg\r\n        .selectAll('path')\r\n        .data(T ? [dates] : [])\r\n        .join(\r\n          (enter) =>\r\n            enter\r\n              .append('path')\r\n              .attr('fill', 'none')\r\n              .attr('stroke', color + '99')\r\n              .attr('stroke-width', 2.5)\r\n              .attr('d', linePath)\r\n              .attr('stroke-dasharray', function () {\r\n                return (pathLength = this.getTotalLength());\r\n              })\r\n              .call((enter) =>\r\n                enter\r\n                  .attr('stroke-dashoffset', pathLength)\r\n                  .transition()\r\n                  .delay(100)\r\n                  .duration(2500)\r\n                  .attr('stroke-dashoffset', 0)\r\n              ),\r\n          (update) =>\r\n            update\r\n              .attr('stroke-dasharray', null)\r\n              .transition()\r\n              .duration(500)\r\n              .attrTween('d', function (date) {\r\n                const previous = select(this).attr('d');\r\n                const current = linePath(date);\r\n                return interpolatePath(previous, current);\r\n              })\r\n        );\r\n\r\n      svg\r\n        .selectAll('circle')\r\n        .data(T ? [dates[T - 1]] : [])\r\n        .join(\r\n          (enter) =>\r\n            enter\r\n              .append('circle')\r\n              .attr('fill', color)\r\n              .attr('r', 2.5)\r\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\r\n              .attr('cy', (date) =>\r\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\r\n              )\r\n              .style('opacity', 0)\r\n              .call((enter) =>\r\n                enter\r\n                  .transition()\r\n                  .delay(2100)\r\n                  .duration(500)\r\n                  .style('opacity', 1)\r\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\r\n                  .attr('cy', (date) =>\r\n                    yScale(getStatistic(timeseries[date], 'delta', statistic))\r\n                  )\r\n              ),\r\n          (update) =>\r\n            update\r\n              .transition()\r\n              .duration(500)\r\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\r\n              .attr('cy', (date) =>\r\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\r\n              )\r\n        );\r\n    });\r\n  }, [dates, timeseries]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      {PRIMARY_STATISTICS.map((statistic, index) => (\r\n        <div key={statistic} className={classnames('svg-parent')}>\r\n          <svg\r\n            ref={(el) => {\r\n              refs.current[index] = el;\r\n            }}\r\n            width={width}\r\n            height={height}\r\n            viewBox={`0 0 ${width} ${height}`}\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (currProps.forceRender) {\r\n    return false;\r\n  } else if (!currProps.timeseries && prevProps.timeseries) {\r\n    return true;\r\n  } else if (currProps.timeseries && !prevProps.timeseries) {\r\n    return false;\r\n  } else if (!equal(currProps.stateCode, prevProps.stateCode)) {\r\n    return false;\r\n  } else if (!equal(currProps.date, prevProps.date)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default React.memo(Minigraphs, isEqual);\r\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}